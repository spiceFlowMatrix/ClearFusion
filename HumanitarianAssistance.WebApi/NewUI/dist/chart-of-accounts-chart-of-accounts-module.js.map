{"version":3,"sources":["webpack:///./src/app/dashboard/accounting/chart-of-accounts/add-account/add-account.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/add-account/add-account.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/add-account/add-account.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/assets/assets.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/assets/assets.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/assets/assets.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-account-detail/chart-of-account-detail.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-account-detail/chart-of-account-detail.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-account-detail/chart-of-account-detail.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-accounts-pdf.service.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-accounts-routing.module.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-accounts.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-accounts.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-accounts.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/chart-of-accounts.module.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/expense/expense.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/expense/expense.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/expense/expense.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/funds/funds.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/funds/funds.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/funds/funds.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/income/income.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/income/income.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/income/income.component.ts","webpack:///./src/app/dashboard/accounting/chart-of-accounts/liabilities/liabilities.component.html","webpack:///./src/app/dashboard/accounting/chart-of-accounts/liabilities/liabilities.component.scss","webpack:///./src/app/dashboard/accounting/chart-of-accounts/liabilities/liabilities.component.ts","webpack:///./src/app/shared/static-utilities.ts"],"names":[],"mappings":"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","file":"chart-of-accounts-chart-of-accounts-module.js","sourcesContent":["module.exports = \"<div>\\r\\n  <h1 mat-dialog-title>\\r\\n    Add New Account\\r\\n  </h1>\\r\\n  <hr />\\r\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"addCharOfAccountForm\\\" (ngSubmit)=\\\"onFormSubmit(addCharOfAccountForm.value)\\\">\\r\\n    <div mat-dialog-content>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          Account Code:\\r\\n          <span>{{parentAccountCode}} </span>\\r\\n\\r\\n          <input [min]=\\\"min\\\" [max]=\\\"max\\\" [maxlength]=\\\"maxlength\\\" formControlName=\\\"AccountCode\\\" appNumberOnly=\\\"true\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.AccountCode.errors }\\\" />\\r\\n          <div *ngIf=\\\"submitted && f.AccountCode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.AccountCode.errors.required\\\" style=\\\"color:red\\\">Account Code is required</div>\\r\\n              <div *ngIf=\\\"f.AccountCode.errors.minLengthValidator\\\" style=\\\"color:red\\\">You must input 2 digit for this level</div>\\r\\n              <div *ngIf=\\\"f.AccountCode.errors.numValidator\\\" style=\\\"color:red\\\">Account Code must be numeric</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <br/>\\r\\n          <span>Account Name: </span>\\r\\n          <input formControlName=\\\"AccountName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.AccountName.errors }\\\" />\\r\\n          <div *ngIf=\\\"submitted && f.AccountName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.AccountName.errors.required\\\" style=\\\"color:red\\\">Account Name is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row pull-right\\\" mat-dialog-actions>\\r\\n\\r\\n      <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"addAccountLoader\\\">\\r\\n        <span *ngIf=\\\"!addAccountLoader; else addAccountLoaderTemplate\\\">Save</span>\\r\\n        <ng-template #addAccountLoaderTemplate>\\r\\n          <div class=\\\"spinner_center padding_top_5 padding_bottom_5\\\">\\r\\n            <mat-spinner [diameter]=\\\"25\\\"> </mat-spinner>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </button>\\r\\n      <button mat-raised-button [mat-dialog-close]=\\\"data.data\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"input, input:focus {\\n  border: transparent;\\n  box-shadow: none;\\n  border-bottom: 1px solid; }\\n\\ninput:focus {\\n  border: transparent;\\n  box-shadow: none;\\n  border-bottom: 1px solid transparent; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvYWRkLWFjY291bnQvZDpcXERheSBVc2VyXFxBdmluYXNoXFxPZmZpY2lhbFxcSHVtYW5pdGFyaWFuXFxHaXRMYWJSZXBvXFxjbGVhci1mdXNpb25cXEh1bWFuaXRhcmlhbkFzc2lzdGFuY2UuV2ViQXBpXFxOZXdVSS9zcmNcXGFwcFxcZGFzaGJvYXJkXFxhY2NvdW50aW5nXFxjaGFydC1vZi1hY2NvdW50c1xcYWRkLWFjY291bnRcXGFkZC1hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQix3QkFBd0IsRUFBQTs7QUFFNUI7RUFDSSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLG9DQUFvQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvYWRkLWFjY291bnQvYWRkLWFjY291bnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCwgaW5wdXQ6Zm9jdXMge1xyXG4gICAgYm9yZGVyOiB0cmFuc3BhcmVudDsgXHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkO1xyXG59XHJcbmlucHV0OmZvY3VzIHtcclxuICAgIGJvcmRlcjogdHJhbnNwYXJlbnQ7IFxyXG4gICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms'; ;\r\nimport { ChartOfAccountModel } from '../models/chart-of-account.model';\r\nimport { CommonLoaderService } from 'src/app/shared/common-loader/common-loader.service';\r\nimport { GlobalService } from 'src/app/shared/services/global-services.service';\r\nimport { AppUrlService } from 'src/app/shared/services/app-url.service';\r\nimport { AccountLevels, AccountLevelLimits } from 'src/app/shared/enum';\r\nimport { GLOBAL } from 'src/app/shared/global';\r\nimport { ReplaySubject } from 'rxjs/internal/ReplaySubject';\r\nimport { takeUntil } from 'rxjs/internal/operators/takeUntil';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-account',\r\n  templateUrl: './add-account.component.html',\r\n  styleUrls: ['./add-account.component.scss']\r\n})\r\nexport class AddAccountComponent implements OnInit {\r\n\r\n  AccountHeadType: number;\r\n  AccountLevel: number;\r\n  chartOfAccountList: any[];\r\n  addCharOfAccountForm: FormGroup;\r\n  addAccountLoader = false;\r\n  mainLevelData: any;\r\n  controlLevelData: any;\r\n  subLevelData: any;\r\n  parentAccountCode: any;\r\n  min: number;\r\n  max: number;\r\n  maxlength: number;\r\n  submitted = false;\r\n\r\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\r\n\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddAccountComponent>,\r\n    public commonLoader: CommonLoaderService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public toastr: ToastrService,\r\n    private globalService: GlobalService,\r\n    private appUrl: AppUrlService ) {\r\n      this.AccountHeadType = data.AccountHeadType;\r\n      this.chartOfAccountList = data.AccountList;\r\n      this.mainLevelData = data.mainLevelData;\r\n      this.AccountLevel = data.AccountLevel;\r\n      this.controlLevelData = data.controlLevelData;\r\n      this.subLevelData = data.subLevelData;\r\n\r\n      if (this.AccountLevel === AccountLevels.MainLevel) {\r\n        this.initForm(null);\r\n        this.min = 1;\r\n        this.max = 9;\r\n        this.maxlength = 1;\r\n      } else if (this.AccountLevel === AccountLevels.ControlLevel) {\r\n        this.initForm(this.mainLevelData.ChartOfAccountNewCode);\r\n        this.min = 1;\r\n        this.max = 9;\r\n        this.maxlength = 1;\r\n      } else if (this.AccountLevel === AccountLevels.SubLevel) {\r\n        this.initForm(this.controlLevelData.ChartOfAccountNewCode);\r\n        this.min = 1;\r\n        this.max = 99;\r\n        this.maxlength = 2;\r\n      } else if (this.AccountLevel === AccountLevels.InputLevel) {\r\n        this.initForm(this.subLevelData.ChartOfAccountNewCode);\r\n        this.min = 1;\r\n        this.max = 99;\r\n        this.maxlength = 2;\r\n      }\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n//#region \"initForm\"\r\ninitForm(AccountCode: any) {\r\n  this.parentAccountCode = AccountCode;\r\n  this.addCharOfAccountForm = this.fb.group({\r\n    AccountCode: ['', [Validators.required, this.minLengthValidator(this.AccountLevel)]],\r\n    AccountName: [null, Validators.required],\r\n    AccountHeadType: this.AccountHeadType,\r\n    AccountLevel: this.AccountLevel\r\n  });\r\n}\r\n//#endregion\r\n\r\nget f() {\r\n  return this.addCharOfAccountForm.controls;\r\n}\r\n\r\nminLengthValidator(accountType): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n    if ((accountType === AccountLevels.SubLevel || accountType === AccountLevels.InputLevel) && (control.value.length < 2)) {\r\n      return { 'minLengthValidator': true };\r\n    }\r\n    const regexp = new RegExp('^[0-9]+$');\r\n    if (!regexp.test(control.value) && (control.value !== '')) {\r\n      return { 'numValidator': true };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n//#region \"onFormSubmit\"\r\nonFormSubmit(data: any) {\r\n  this.submitted = true;\r\n  if (data.AccountLevel === AccountLevels.MainLevel) {\r\n    data.AccountCode = this.parentAccountCode != null ? this.parentAccountCode + data.AccountCode : data.AccountCode;\r\n    this.addMainLevelAccountDetail(data);\r\n  } else if (data.AccountLevel === AccountLevels.ControlLevel) {\r\n    data.AccountCode = this.parentAccountCode + data.AccountCode;\r\n    this.addControlLevelAccountDetail(data);\r\n  } else if (data.AccountLevel === AccountLevels.SubLevel) {\r\n    data.AccountCode = this.parentAccountCode + data.AccountCode;\r\n    this.addSubLevelAccountDetail(data);\r\n  } else if (data.AccountLevel === AccountLevels.InputLevel) {\r\n    data.AccountCode = this.parentAccountCode + data.AccountCode;\r\n    this.addInputLevelAccountDetail(data);\r\n  }\r\n}\r\n//#endregion\r\n\r\n //#region \"addMainLevelAccountDetail\"\r\n addMainLevelAccountDetail(model: any) {\r\n\r\n  if (this.addCharOfAccountForm.valid) {\r\n    this.addAccountLoader = true;\r\n    const count = this.chartOfAccountList.length;\r\n    if (count <  AccountLevelLimits.MainLevel) {\r\n\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: 0,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: AccountLevels.MainLevel,\r\n      AccountHeadTypeId: this.AccountHeadType,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId,\r\n      ChartOfAccountNewCode: model.AccountCode\r\n    };\r\n\r\n    const item = this.chartOfAccountList.length - 1; // use to calculate the index\r\n\r\n    this.globalService\r\n      .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            if (response.data.ChartOfAccountNewDetail !== null) {\r\n\r\n              const responseData = response.data.ChartOfAccountNewDetail;\r\n\r\n              obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n              obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n              obj.AccountName = responseData.AccountName;\r\n              obj.ParentID = responseData.ParentID;\r\n              obj.AccountLevelId = responseData.AccountLevelId;\r\n              obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n              obj.AccountTypeId = responseData.AccountTypeId;\r\n              obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n\r\n              obj.Children = [];\r\n              obj._IsDeleted = false;\r\n              obj._IsError = false;\r\n              obj._IsLoading = false;\r\n              this.addAccountLoader = false;\r\n\r\n              // Update the Obj and Push into the list\r\n              this.chartOfAccountList.push(obj);\r\n              this.dialogRef.close();\r\n\r\n            }\r\n\r\n          } else if (response.StatusCode === 400) {\r\n            this.addAccountLoader = false;\r\n\r\n            this.toastr.error(response.Message);\r\n          }\r\n        },\r\n        error => {\r\n          this.toastr.error('Something went wrong ! Try Again');\r\n          this.addAccountLoader = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.toastr.error('Limit Exceeded');\r\n      this.addAccountLoader = false;\r\n    }\r\n  }\r\n}\r\n//#endregion\r\n\r\n//#region \"addControlLevelAccountDetail\"\r\naddControlLevelAccountDetail(model: any) {\r\n  // Main Level\r\n\r\n  if (this.addCharOfAccountForm.valid) {\r\n\r\n    this.addAccountLoader = true;\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === this.mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    const count = this.chartOfAccountList[mainLevelIndex].Children.length - 1;\r\n    if (count < AccountLevelLimits.ControlLevel) {\r\n\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: 0,\r\n      ChartOfAccountNewCode: model.AccountCode,\r\n      AccountName: model.AccountName,\r\n      ParentID: mainLevelItem.ChartOfAccountNewId,\r\n      AccountLevelId: AccountLevels.ControlLevel,\r\n      AccountHeadTypeId: this.AccountHeadType,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n    // Error handling and loading handling\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children.length - 1; // use to calculate the index\r\n\r\n    this.globalService\r\n      .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n            if (response.data.ChartOfAccountNewDetail !== null) {\r\n              const responseData = response.data.ChartOfAccountNewDetail;\r\n              obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n              obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n              obj.AccountName = responseData.AccountName;\r\n              obj.ParentID = responseData.ParentID;\r\n              obj.AccountLevelId = responseData.AccountLevelId;\r\n              obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n              obj.AccountTypeId = responseData.AccountTypeId;\r\n              obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n              obj.Children = [];\r\n              obj._IsDeleted = false;\r\n              obj._IsError = false;\r\n              obj._IsLoading = false;\r\n              this.addAccountLoader = false;\r\n\r\n              // Update the Obj and Push into the list\r\n              this.chartOfAccountList[mainLevelIndex].Children.push(obj);\r\n              this.dialogRef.close();\r\n            }\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n            this.addAccountLoader = false;\r\n          }\r\n        },\r\n        error => {\r\n          this.toastr.error('Something went wrong ! Try Again');\r\n          this.addAccountLoader = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.toastr.error('Limit Exceeded');\r\n      this.addAccountLoader = false;\r\n    }\r\n  }\r\n}\r\n//#endregion\r\n\r\n//#region \"addSubLevelAccountDetail\"\r\naddSubLevelAccountDetail(model: any) {\r\n\r\n  if (this.addCharOfAccountForm.valid) {\r\n\r\n    this.addAccountLoader = true;\r\n\r\n// Main Level\r\nconst mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === this.mainLevelData.ChartOfAccountNewId);\r\nconst mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n\r\n// Control Level\r\nconst controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n                             .find(x => x.ChartOfAccountNewId === this.controlLevelData.ChartOfAccountNewId);\r\nconst controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n                              .indexOf(controlLevelItem);\r\n\r\nconst count = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.length - 1;\r\nif (count < AccountLevelLimits.SubLevel) {\r\n\r\nconst obj: ChartOfAccountModel = {\r\n  ChartOfAccountNewId: 0,\r\n  AccountName: model.AccountName,\r\n  ParentID: this.controlLevelData.ChartOfAccountNewId,\r\n  AccountLevelId: AccountLevels.SubLevel,\r\n  AccountHeadTypeId: this.AccountHeadType,\r\n  AccountTypeId: model.AccountTypeId,\r\n  AccountFilterTypeId: model.AccountFilterTypeId,\r\n  ChartOfAccountNewCode: model.AccountCode,\r\n};\r\n\r\n// Error handling and loading handling\r\nconst index = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.length - 1; // use to calculate the index\r\n\r\nthis.globalService\r\n  .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n  .pipe(takeUntil(this.destroyed$))\r\n  .subscribe(\r\n    response => {\r\n      if (response.StatusCode === 200) {\r\n        if (response.data.ChartOfAccountNewDetail !== null) {\r\n          const responseData = response.data.ChartOfAccountNewDetail;\r\n          obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n          obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n          obj.AccountName = responseData.AccountName;\r\n          obj.ParentID = responseData.ParentID;\r\n          obj.AccountLevelId = responseData.AccountLevelId;\r\n          obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n          obj.AccountTypeId = responseData.AccountTypeId;\r\n          obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n          obj.Children = [];\r\n          obj._IsDeleted = false;\r\n          obj._IsError = false;\r\n          obj._IsLoading = false;\r\n\r\n          this.addAccountLoader = false;\r\n\r\n          // Update the Obj and Push into the list\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.push(obj);\r\n          this.dialogRef.close();\r\n        }\r\n\r\n      } else if (response.StatusCode === 400) {\r\n\r\n        this.toastr.error(response.Message);\r\n        this.addAccountLoader = false;\r\n      }\r\n    },\r\n    error => {\r\n      this.toastr.error('Something went wrong ! Try Again');\r\n      this.addAccountLoader = false;\r\n    }\r\n  );\r\n} else {\r\n  this.toastr.error('Limit Exceeded');\r\n  this.addAccountLoader = false;\r\n}\r\n  }\r\n}\r\n//#endregion\r\n\r\n\r\n//#region \"addInputLevelAccountDetail\"\r\naddInputLevelAccountDetail(model: any) {\r\n\r\n  if (this.addCharOfAccountForm.valid) {\r\n\r\n    this.addAccountLoader = true;\r\n\r\n    // Main Level\r\n  const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === this.mainLevelData.ChartOfAccountNewId);\r\n  const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n\r\n  // Control Level\r\n  const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n                               .find(x => x.ChartOfAccountNewId === this.controlLevelData.ChartOfAccountNewId);\r\n  const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n                                .indexOf(controlLevelItem);\r\n\r\n  // Sub Level\r\n  const subLevelItem = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n                           .find(x => x.ChartOfAccountNewId === this.subLevelData.ChartOfAccountNewId);\r\n  const subLevelIndex = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n                            .indexOf(subLevelItem);\r\n\r\n  const count = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.length - 1;\r\n  if (count < AccountLevelLimits.InputLevel) {\r\n\r\n  const obj: ChartOfAccountModel = {\r\n    ChartOfAccountNewId: 0,\r\n    AccountName: model.AccountName,\r\n    ParentID: this.subLevelData.ChartOfAccountNewId,\r\n    AccountLevelId: AccountLevels.InputLevel,\r\n    AccountHeadTypeId: this.AccountHeadType,\r\n    AccountTypeId: model.AccountTypeId,\r\n    AccountFilterTypeId: model.AccountFilterTypeId,\r\n    ChartOfAccountNewCode: model.AccountCode\r\n  };\r\n\r\n  // Error handling and loading handling\r\n  const index =  this.chartOfAccountList[mainLevelIndex]\r\n                     .Children[controlLevelIndex].Children[subLevelIndex].Children.length - 1; // use to calculate the index\r\n\r\n  this.globalService\r\n    .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n    .pipe(takeUntil(this.destroyed$))\r\n    .subscribe(\r\n      response => {\r\n        if (response.StatusCode === 200) {\r\n          if (response.data.ChartOfAccountNewDetail !== null) {\r\n            const responseData = response.data.ChartOfAccountNewDetail;\r\n            obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n            obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n            obj.AccountName = responseData.AccountName;\r\n            obj.ParentID = responseData.ParentID;\r\n            obj.AccountLevelId = responseData.AccountLevelId;\r\n            obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n            obj.AccountTypeId = responseData.AccountTypeId;\r\n            obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n            obj.Children = [];\r\n            obj._IsDeleted = false;\r\n            obj._IsError = false;\r\n            obj._IsLoading = false;\r\n\r\n            this.addAccountLoader = false;\r\n\r\n            // Update the Obj and Push into the list\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.push(obj);\r\n            this.dialogRef.close();\r\n          }\r\n\r\n        } else if (response.StatusCode === 400) {\r\n\r\n          this.toastr.error(response.Message);\r\n          this.addAccountLoader = false;\r\n        }\r\n      },\r\n      error => {\r\n        this.toastr.error('Something went wrong ! Try Again');\r\n        this.addAccountLoader = false;\r\n      }\r\n    );\r\n  } else {\r\n    this.toastr.error('Limit Exceeded');\r\n    this.addAccountLoader = false;\r\n  }\r\n\r\n  }\r\n\r\n\r\n}\r\n//#endregion\r\n\r\n\r\nngOnDestroy() {\r\n\r\n  this.destroyed$.next(true);\r\n  this.destroyed$.complete();\r\n\r\n}\r\n\r\n}\r\n","module.exports = \"<app-chart-of-account-detail\\r\\n  [ACCOUNT_HEAD_TYPE]=\\\"ACCOUNT_HEAD_TYPE\\\"\\r\\n  [ACCOUNT_HEAD_NAME]=\\\"ACCOUNT_HEAD_NAME\\\"\\r\\n>\\r\\n</app-chart-of-account-detail>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2Fzc2V0cy9hc3NldHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountHeadTypes_Enum } from 'src/app/shared/enum';\r\n\r\n@Component({\r\n  selector: 'app-assets',\r\n  templateUrl: './assets.component.html',\r\n  styleUrls: ['./assets.component.scss']\r\n})\r\nexport class AssetsComponent implements OnInit {\r\n\r\n  ACCOUNT_HEAD_TYPE = AccountHeadTypes_Enum.Assets;\r\n  ACCOUNT_HEAD_NAME = AccountHeadTypes_Enum[this.ACCOUNT_HEAD_TYPE];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<lib-sub-header-template>\\r\\n  <span class=\\\"action_header\\\">{{ ACCOUNT_HEAD_NAME }}</span>\\r\\n\\r\\n  <div class=\\\"action_section\\\">\\r\\n    <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"onExportPdf()\\\">\\r\\n      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">\\r\\n        vertical_align_bottom </mat-icon\\r\\n      >Export Pdf\\r\\n    </button>\\r\\n    &nbsp;\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"onAddMainLevelAccountDialog()\\\"\\r\\n      *ngIf=\\\"isEditingAllowed\\\"\\r\\n    >\\r\\n      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">\\r\\n        add\\r\\n      </mat-icon>\\r\\n      Add Main Category\\r\\n    </button>\\r\\n  </div>\\r\\n</lib-sub-header-template>\\r\\n\\r\\n<div class=\\\"body-content\\\">\\r\\n  <div class=\\\"assets-main\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-10 col-sm-offset-1\\\">\\r\\n          <mat-card [ngStyle]=\\\"scrollStyles\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12\\\">\\r\\n                <!-- main level -->\\r\\n                <div *ngFor=\\\"let mainLevelData of chartOfAccountList\\\">\\r\\n                  <div\\r\\n                    class=\\\"panel-heading blue_bg\\\"\\r\\n                    role=\\\"tab\\\"\\r\\n                    [id]=\\\"'heading' + mainLevelData.ChartOfAccountNewId\\\"\\r\\n                  >\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-1\\\">\\r\\n                        <div\\r\\n                          *ngIf=\\\"\\r\\n                            mainLevelData._IsLoading && !mainLevelData._IsError\\r\\n                          \\\"\\r\\n                        >\\r\\n                          <mat-spinner [diameter]=\\\"15\\\"></mat-spinner>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"mainLevelData._IsError\\\">\\r\\n                          <i class=\\\"fas fa-exclamation-triangle\\\"></i>\\r\\n                        </div>\\r\\n                        <div\\r\\n                          *ngIf=\\\"\\r\\n                            !mainLevelData._IsLoading && !mainLevelData._IsError\\r\\n                          \\\"\\r\\n                        >\\r\\n                          <a\\r\\n                            (click)=\\\"onMainLevelClicked(mainLevelData)\\\"\\r\\n                            class=\\\"counts_list\\\"\\r\\n                            role=\\\"button\\\"\\r\\n                            data-toggle=\\\"collapse\\\"\\r\\n                            data-parent=\\\"#accordion\\\"\\r\\n                            [href]=\\\"\\r\\n                              '#collapse' + mainLevelData.ChartOfAccountNewId\\r\\n                            \\\"\\r\\n                            aria-expanded=\\\"true\\\"\\r\\n                            [attr.aria-controls]=\\\"\\r\\n                              'collapse' + mainLevelData.ChartOfAccountNewId\\r\\n                            \\\"\\r\\n                          >\\r\\n                            {{ mainLevelData.ChartOfAccountNewCode }}\\r\\n                          </a>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-11\\\">\\r\\n                        <div class=\\\"example-form-field accordian_content\\\">\\r\\n                          <input\\r\\n                            matInput\\r\\n                            type=\\\"text\\\"\\r\\n                            maxlength=\\\"150\\\"\\r\\n                            [disabled]=\\\"\\r\\n                              mainLevelData._IsLoading || !isEditingAllowed\\r\\n                            \\\"\\r\\n                            [value]=\\\"mainLevelData.AccountName\\\"\\r\\n                            [name]=\\\"\\r\\n                              'mainLevelDataAccountName' +\\r\\n                              mainLevelData.ChartOfAccountNewId\\r\\n                            \\\"\\r\\n                            (change)=\\\"\\r\\n                              onBlurEditMainLevelAccountName(\\r\\n                                mainLevelData,\\r\\n                                $event.target.value\\r\\n                              )\\r\\n                            \\\"\\r\\n                          />\\r\\n                          &nbsp;\\r\\n                          <i\\r\\n                            class=\\\"fas fa-trash icon_cursor\\\"\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"onDeleteMainLevel(mainLevelData)\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n\\r\\n                        <span class=\\\"border-arrow\\\">\\r\\n                          <a\\r\\n                            [hidden]=\\\"mainLevelData._IsLoading\\\"\\r\\n                            (click)=\\\"onMainLevelClicked(mainLevelData)\\\"\\r\\n                            class=\\\"arrow_accord\\\"\\r\\n                            role=\\\"button\\\"\\r\\n                            data-toggle=\\\"collapse\\\"\\r\\n                            data-parent=\\\"#accordion\\\"\\r\\n                            [href]=\\\"\\r\\n                              '#collapse' + mainLevelData.ChartOfAccountNewId\\r\\n                            \\\"\\r\\n                            aria-expanded=\\\"true\\\"\\r\\n                            [attr.aria-controls]=\\\"\\r\\n                              'collapse' + mainLevelData.ChartOfAccountNewId\\r\\n                            \\\"\\r\\n                          >\\r\\n                          </a>\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- Control level -->\\r\\n                  <div\\r\\n                    [id]=\\\"'collapse' + mainLevelData.ChartOfAccountNewId\\\"\\r\\n                    class=\\\"panel-collapse collapse\\\"\\r\\n                    role=\\\"tabpanel\\\"\\r\\n                    [attr.aria-labelledby]=\\\"\\r\\n                      'heading' + mainLevelData.ChartOfAccountNewId\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <div class=\\\"panel-body padding_0\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                          <div class=\\\"panel-heading\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-sm-1\\\"></div>\\r\\n                              <div class=\\\"col-sm-11\\\">\\r\\n                                <a\\r\\n                                  (click)=\\\"\\r\\n                                    onAddControlLevelAccountDialog(\\r\\n                                      mainLevelData\\r\\n                                    )\\r\\n                                  \\\"\\r\\n                                  class=\\\"add_new\\\"\\r\\n                                  *ngIf=\\\"isEditingAllowed\\\"\\r\\n                                >\\r\\n                                  Add New...\\r\\n                                </a>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div\\r\\n                            *ngFor=\\\"\\r\\n                              let controlLevelData of mainLevelData.Children\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <div\\r\\n                              class=\\\"panel-heading child_div\\\"\\r\\n                              role=\\\"tab\\\"\\r\\n                              [id]=\\\"\\r\\n                                'heading' + controlLevelData.ChartOfAccountNewId\\r\\n                              \\\"\\r\\n                            >\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-1\\\">\\r\\n                                  <div\\r\\n                                    *ngIf=\\\"\\r\\n                                      controlLevelData._IsLoading &&\\r\\n                                      !controlLevelData._IsError\\r\\n                                    \\\"\\r\\n                                  >\\r\\n                                    <mat-spinner [diameter]=\\\"15\\\"></mat-spinner>\\r\\n                                  </div>\\r\\n                                  <div *ngIf=\\\"controlLevelData._IsError\\\">\\r\\n                                    <i class=\\\"fas fa-exclamation-triangle\\\"></i>\\r\\n                                  </div>\\r\\n                                  <div\\r\\n                                    *ngIf=\\\"\\r\\n                                      !controlLevelData._IsLoading &&\\r\\n                                      !controlLevelData._IsError\\r\\n                                    \\\"\\r\\n                                  >\\r\\n                                    <a\\r\\n                                      (click)=\\\"\\r\\n                                        onControlLevelClicked(\\r\\n                                          mainLevelData,\\r\\n                                          controlLevelData\\r\\n                                        )\\r\\n                                      \\\"\\r\\n                                      role=\\\"button\\\"\\r\\n                                      data-toggle=\\\"collapse\\\"\\r\\n                                      data-parent=\\\"#accordion\\\"\\r\\n                                      [href]=\\\"\\r\\n                                        '#collapse' +\\r\\n                                        controlLevelData.ChartOfAccountNewId\\r\\n                                      \\\"\\r\\n                                      class=\\\"counts_list second_div\\\"\\r\\n                                      aria-expanded=\\\"true\\\"\\r\\n                                      [attr.aria-controls]=\\\"\\r\\n                                        'collapse' +\\r\\n                                        controlLevelData.ChartOfAccountNewId\\r\\n                                      \\\"\\r\\n                                    >\\r\\n                                      {{\\r\\n                                        controlLevelData.ChartOfAccountNewCode\\r\\n                                      }}\\r\\n                                    </a>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-11\\\">\\r\\n                                  <div\\r\\n                                    class=\\\"example-form-field accordian_content\\\"\\r\\n                                  >\\r\\n                                    <input\\r\\n                                      matInput\\r\\n                                      type=\\\"text\\\"\\r\\n                                      maxlength=\\\"150\\\"\\r\\n                                      [disabled]=\\\"\\r\\n                                        controlLevelData._IsLoading ||\\r\\n                                        !isEditingAllowed\\r\\n                                      \\\"\\r\\n                                      [value]=\\\"controlLevelData.AccountName\\\"\\r\\n                                      [name]=\\\"\\r\\n                                        'controlAccountName' +\\r\\n                                        controlLevelData.ChartOfAccountNewId\\r\\n                                      \\\"\\r\\n                                      (change)=\\\"\\r\\n                                        onBlurEditControlLevelAccountName(\\r\\n                                          mainLevelData,\\r\\n                                          controlLevelData,\\r\\n                                          $event.target.value\\r\\n                                        )\\r\\n                                      \\\"\\r\\n                                    />\\r\\n                                    &nbsp;\\r\\n                                    <i\\r\\n                                      class=\\\"fas fa-trash icon_cursor\\\"\\r\\n                                      color=\\\"warn\\\"\\r\\n                                      (click)=\\\"\\r\\n                                        onDeleteControlLevel(\\r\\n                                          mainLevelData,\\r\\n                                          controlLevelData\\r\\n                                        )\\r\\n                                      \\\"\\r\\n                                    ></i>\\r\\n                                  </div>\\r\\n\\r\\n                                  <a\\r\\n                                    [hidden]=\\\"controlLevelData._IsLoading\\\"\\r\\n                                    (click)=\\\"\\r\\n                                      onControlLevelClicked(\\r\\n                                        mainLevelData,\\r\\n                                        controlLevelData\\r\\n                                      )\\r\\n                                    \\\"\\r\\n                                    class=\\\"arrow_accord\\\"\\r\\n                                    role=\\\"button\\\"\\r\\n                                    data-toggle=\\\"collapse\\\"\\r\\n                                    data-parent=\\\"#accordion\\\"\\r\\n                                    [href]=\\\"\\r\\n                                      '#collapse' +\\r\\n                                      controlLevelData.ChartOfAccountNewId\\r\\n                                    \\\"\\r\\n                                    aria-expanded=\\\"true\\\"\\r\\n                                    [attr.aria-controls]=\\\"\\r\\n                                      'collapse' +\\r\\n                                      controlLevelData.ChartOfAccountNewId\\r\\n                                    \\\"\\r\\n                                  >\\r\\n                                  </a>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Sub level -->\\r\\n                            <div\\r\\n                              [id]=\\\"\\r\\n                                'collapse' +\\r\\n                                controlLevelData.ChartOfAccountNewId\\r\\n                              \\\"\\r\\n                              class=\\\"panel-collapse collapse\\\"\\r\\n                              role=\\\"tabpanel\\\"\\r\\n                              [attr.aria-labelledby]=\\\"\\r\\n                                'heading' + controlLevelData.ChartOfAccountNewId\\r\\n                              \\\"\\r\\n                            >\\r\\n                              <div class=\\\"panel-body padding_0\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-sm-1\\\"></div>\\r\\n                                  <div class=\\\"col-sm-10\\\">\\r\\n                                    <div class=\\\"panel-heading\\\">\\r\\n                                      <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-10\\\">\\r\\n                                          <a\\r\\n                                            (click)=\\\"\\r\\n                                              onAddSubLevelAccountDialog(\\r\\n                                                mainLevelData,\\r\\n                                                controlLevelData\\r\\n                                              )\\r\\n                                            \\\"\\r\\n                                            class=\\\"add_new\\\"\\r\\n                                            *ngIf=\\\"isEditingAllowed\\\"\\r\\n                                          >\\r\\n                                            Add New...\\r\\n                                          </a>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div\\r\\n                                      *ngFor=\\\"\\r\\n                                        let subLevelData of controlLevelData.Children\\r\\n                                      \\\"\\r\\n                                    >\\r\\n                                      <div\\r\\n                                        class=\\\"panel-heading child_div tertiarry_level\\\"\\r\\n                                        role=\\\"tab\\\"\\r\\n                                        [id]=\\\"\\r\\n                                          'heading' +\\r\\n                                          subLevelData.ChartOfAccountNewId\\r\\n                                        \\\"\\r\\n                                      >\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                          <div class=\\\"col-sm-1\\\">\\r\\n                                            <div\\r\\n                                              *ngIf=\\\"\\r\\n                                                subLevelData._IsLoading &&\\r\\n                                                !subLevelData._IsError\\r\\n                                              \\\"\\r\\n                                            >\\r\\n                                              <mat-spinner\\r\\n                                                [diameter]=\\\"15\\\"\\r\\n                                              ></mat-spinner>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"subLevelData._IsError\\\">\\r\\n                                              <i\\r\\n                                                class=\\\"fas fa-exclamation-triangle\\\"\\r\\n                                              ></i>\\r\\n                                            </div>\\r\\n                                            <div\\r\\n                                              *ngIf=\\\"\\r\\n                                                !subLevelData._IsLoading &&\\r\\n                                                !subLevelData._IsError\\r\\n                                              \\\"\\r\\n                                            >\\r\\n                                              <a\\r\\n                                                class=\\\"counts_list count_3\\\"\\r\\n                                                (click)=\\\"\\r\\n                                                  onSubLevelClicked(\\r\\n                                                    mainLevelData,\\r\\n                                                    controlLevelData,\\r\\n                                                    subLevelData\\r\\n                                                  )\\r\\n                                                \\\"\\r\\n                                                role=\\\"button\\\"\\r\\n                                                data-toggle=\\\"collapse\\\"\\r\\n                                                data-parent=\\\"#accordion\\\"\\r\\n                                                [href]=\\\"\\r\\n                                                  '#collapse' +\\r\\n                                                  subLevelData.ChartOfAccountNewId\\r\\n                                                \\\"\\r\\n                                                aria-expanded=\\\"true\\\"\\r\\n                                                [attr.aria-controls]=\\\"\\r\\n                                                  'collapse' +\\r\\n                                                  mainLevelData.ChartOfAccountNewId\\r\\n                                                \\\"\\r\\n                                              >\\r\\n                                                {{\\r\\n                                                  subLevelData.ChartOfAccountNewCode\\r\\n                                                }}\\r\\n                                              </a>\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-sm-3\\\">\\r\\n                                            <div\\r\\n                                              class=\\\"example-form-field accordian_content\\\"\\r\\n                                            >\\r\\n                                              <!-- <mat-form-field class=\\\"example-form-field\\\"> -->\\r\\n                                              <input\\r\\n                                                matInput\\r\\n                                                type=\\\"text\\\"\\r\\n                                                maxlength=\\\"150\\\"\\r\\n                                                [disabled]=\\\"\\r\\n                                                  subLevelData._IsLoading ||\\r\\n                                                  !isEditingAllowed\\r\\n                                                \\\"\\r\\n                                                [value]=\\\"\\r\\n                                                  subLevelData.AccountName\\r\\n                                                \\\"\\r\\n                                                [name]=\\\"\\r\\n                                                  'subLevelAccountName' +\\r\\n                                                  subLevelData.ChartOfAccountNewId\\r\\n                                                \\\"\\r\\n                                                (change)=\\\"\\r\\n                                                  onBlurEditSubLevelAccountName(\\r\\n                                                    mainLevelData,\\r\\n                                                    controlLevelData,\\r\\n                                                    subLevelData,\\r\\n                                                    $event.target.value\\r\\n                                                  )\\r\\n                                                \\\"\\r\\n                                              />\\r\\n                                              <!-- </mat-form-field> -->\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-sm-3\\\">\\r\\n                                            <div\\r\\n                                              class=\\\"example-form-field accordian_content\\\"\\r\\n                                            >\\r\\n                                              <!-- <mat-form-field class=\\\"example-form-field\\\"> -->\\r\\n                                              <mat-select\\r\\n                                                [disabled]=\\\"\\r\\n                                                  subLevelData._IsLoading ||\\r\\n                                                  !isEditingAllowed\\r\\n                                                \\\"\\r\\n                                                [value]=\\\"\\r\\n                                                  subLevelData.AccountFilterTypeId\\r\\n                                                \\\"\\r\\n                                                (selectionChange)=\\\"\\r\\n                                                  onBlurEditSubLevelAccountFilterType(\\r\\n                                                    mainLevelData,\\r\\n                                                    controlLevelData,\\r\\n                                                    subLevelData,\\r\\n                                                    $event.value\\r\\n                                                  )\\r\\n                                                \\\"\\r\\n                                              >\\r\\n                                                <mat-option\\r\\n                                                  *ngFor=\\\"\\r\\n                                                    let item of accountFilterTypeList\\r\\n                                                  \\\"\\r\\n                                                  [value]=\\\"\\r\\n                                                    item.AccountFilterTypeId\\r\\n                                                  \\\"\\r\\n                                                >\\r\\n                                                  {{\\r\\n                                                    item.AccountFilterTypeName\\r\\n                                                  }}\\r\\n                                                </mat-option>\\r\\n                                              </mat-select>\\r\\n                                              <!-- </mat-form-field> -->\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-sm-3\\\">\\r\\n                                            <div\\r\\n                                              class=\\\"example-form-field accordian_content\\\"\\r\\n                                            >\\r\\n                                              <!-- <mat-form-field class=\\\"example-form-field\\\"> -->\\r\\n                                              <mat-select\\r\\n                                                [disabled]=\\\"\\r\\n                                                  subLevelData._IsLoading ||\\r\\n                                                  !isEditingAllowed\\r\\n                                                \\\"\\r\\n                                                [value]=\\\"\\r\\n                                                  subLevelData.AccountTypeId\\r\\n                                                \\\"\\r\\n                                                (selectionChange)=\\\"\\r\\n                                                  onBlurEditSubLevelAccountType(\\r\\n                                                    mainLevelData,\\r\\n                                                    controlLevelData,\\r\\n                                                    subLevelData,\\r\\n                                                    $event.value\\r\\n                                                  )\\r\\n                                                \\\"\\r\\n                                              >\\r\\n                                                <mat-option\\r\\n                                                  *ngFor=\\\"\\r\\n                                                    let item of accountTypeList\\r\\n                                                  \\\"\\r\\n                                                  [value]=\\\"item.AccountTypeId\\\"\\r\\n                                                >\\r\\n                                                  {{ item.AccountTypeName }}\\r\\n                                                </mat-option>\\r\\n                                              </mat-select>\\r\\n                                              <!-- </mat-form-field> -->\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-sm-1\\\">\\r\\n                                            <i\\r\\n                                              class=\\\"fas fa-trash icon_cursor\\\"\\r\\n                                              color=\\\"warn\\\"\\r\\n                                              (click)=\\\"\\r\\n                                                onDeleteSubLevel(\\r\\n                                                  mainLevelData,\\r\\n                                                  controlLevelData,\\r\\n                                                  subLevelData\\r\\n                                                )\\r\\n                                              \\\"\\r\\n                                            ></i>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-sm-1\\\">\\r\\n                                            <a\\r\\n                                              [hidden]=\\\"subLevelData._IsLoading\\\"\\r\\n                                              (click)=\\\"\\r\\n                                                onSubLevelClicked(\\r\\n                                                  mainLevelData,\\r\\n                                                  controlLevelData,\\r\\n                                                  subLevelData\\r\\n                                                )\\r\\n                                              \\\"\\r\\n                                              class=\\\"arrow_accord\\\"\\r\\n                                              role=\\\"button\\\"\\r\\n                                              data-toggle=\\\"collapse\\\"\\r\\n                                              data-parent=\\\"#accordion\\\"\\r\\n                                              [href]=\\\"\\r\\n                                                '#collapse' +\\r\\n                                                subLevelData.ChartOfAccountNewId\\r\\n                                              \\\"\\r\\n                                              aria-expanded=\\\"true\\\"\\r\\n                                              [attr.aria-controls]=\\\"\\r\\n                                                'collapse' +\\r\\n                                                mainLevelData.ChartOfAccountNewId\\r\\n                                              \\\"\\r\\n                                            >\\r\\n                                            </a>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n\\r\\n                                      <!-- Input level -->\\r\\n                                      <div\\r\\n                                        [id]=\\\"\\r\\n                                          'collapse' +\\r\\n                                          subLevelData.ChartOfAccountNewId\\r\\n                                        \\\"\\r\\n                                        class=\\\"panel-collapse collapse\\\"\\r\\n                                        role=\\\"tabpanel\\\"\\r\\n                                        [attr.aria-labelledby]=\\\"\\r\\n                                          'heading' +\\r\\n                                          subLevelData.ChartOfAccountNewId\\r\\n                                        \\\"\\r\\n                                      >\\r\\n                                        <div class=\\\"panel-body padding_0\\\">\\r\\n                                          <div class=\\\"\\\">\\r\\n                                            <div class=\\\"\\\">\\r\\n                                              <div\\r\\n                                                class=\\\"panel-heading clearfix\\\"\\r\\n                                              >\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                  <div class=\\\"col-sm-1\\\"></div>\\r\\n                                                  <div class=\\\"col-sm-9\\\">\\r\\n                                                    <a\\r\\n                                                      class=\\\"add_new\\\"\\r\\n                                                      (click)=\\\"\\r\\n                                                        onAddInputLevelAccountDialog(\\r\\n                                                          mainLevelData,\\r\\n                                                          controlLevelData,\\r\\n                                                          subLevelData\\r\\n                                                        )\\r\\n                                                      \\\"\\r\\n                                                      *ngIf=\\\"isEditingAllowed\\\"\\r\\n                                                    >\\r\\n                                                      Add New...\\r\\n                                                    </a>\\r\\n                                                  </div>\\r\\n                                                </div>\\r\\n                                              </div>\\r\\n\\r\\n                                              <div\\r\\n                                                *ngFor=\\\"\\r\\n                                                  let inputLevelData of subLevelData.Children\\r\\n                                                \\\"\\r\\n                                              >\\r\\n                                                <div\\r\\n                                                  class=\\\"panel-heading child_div fourth_level\\\"\\r\\n                                                  [id]=\\\"\\r\\n                                                    'heading' +\\r\\n                                                    inputLevelData.ChartOfAccountNewId\\r\\n                                                  \\\"\\r\\n                                                >\\r\\n                                                  <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col-sm-1\\\">\\r\\n                                                      <div\\r\\n                                                        *ngIf=\\\"\\r\\n                                                          inputLevelData._IsLoading &&\\r\\n                                                          !inputLevelData._IsError\\r\\n                                                        \\\"\\r\\n                                                      >\\r\\n                                                        <mat-spinner\\r\\n                                                          [diameter]=\\\"15\\\"\\r\\n                                                        ></mat-spinner>\\r\\n                                                      </div>\\r\\n                                                      <div\\r\\n                                                        *ngIf=\\\"\\r\\n                                                          inputLevelData._IsError\\r\\n                                                        \\\"\\r\\n                                                      >\\r\\n                                                        <i\\r\\n                                                          class=\\\"fas fa-exclamation-triangle\\\"\\r\\n                                                        ></i>\\r\\n                                                      </div>\\r\\n                                                      <div\\r\\n                                                        *ngIf=\\\"\\r\\n                                                          !inputLevelData._IsLoading &&\\r\\n                                                          !inputLevelData._IsError\\r\\n                                                        \\\"\\r\\n                                                      >\\r\\n                                                        <a\\r\\n                                                          class=\\\"counts_list count_4\\\"\\r\\n                                                          role=\\\"button\\\"\\r\\n                                                          data-toggle=\\\"collapse\\\"\\r\\n                                                          [href]=\\\"\\r\\n                                                            '#collapse' +\\r\\n                                                            inputLevelData.ChartOfAccountNewId\\r\\n                                                          \\\"\\r\\n                                                        >\\r\\n                                                          {{\\r\\n                                                            inputLevelData.ChartOfAccountNewCode\\r\\n                                                          }}\\r\\n                                                        </a>\\r\\n                                                      </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-sm-11\\\">\\r\\n                                                      <div\\r\\n                                                        class=\\\"example-form-field accordian_content\\\"\\r\\n                                                      >\\r\\n                                                        <!-- <mat-form-field class=\\\"example-form-field\\\"> -->\\r\\n                                                        <input\\r\\n                                                          matInput\\r\\n                                                          type=\\\"text\\\"\\r\\n                                                          maxlength=\\\"150\\\"\\r\\n                                                          [disabled]=\\\"\\r\\n                                                            inputLevelData._IsLoading ||\\r\\n                                                            !isEditingAllowed\\r\\n                                                          \\\"\\r\\n                                                          [value]=\\\"\\r\\n                                                            inputLevelData.AccountName\\r\\n                                                          \\\"\\r\\n                                                          [name]=\\\"\\r\\n                                                            'inputLevel' +\\r\\n                                                            inputLevelData.ChartOfAccountNewId\\r\\n                                                          \\\"\\r\\n                                                          (change)=\\\"\\r\\n                                                            onBlurEditInputLevelAccountName(\\r\\n                                                              mainLevelData,\\r\\n                                                              controlLevelData,\\r\\n                                                              subLevelData,\\r\\n                                                              inputLevelData,\\r\\n                                                              $event.target\\r\\n                                                                .value\\r\\n                                                            )\\r\\n                                                          \\\"\\r\\n                                                        />\\r\\n                                                        &nbsp;\\r\\n                                                        <i\\r\\n                                                          class=\\\"fas fa-trash icon_cursor\\\"\\r\\n                                                          color=\\\"warn\\\"\\r\\n                                                          (click)=\\\"\\r\\n                                                            onDeleteInputLevel(\\r\\n                                                              mainLevelData,\\r\\n                                                              controlLevelData,\\r\\n                                                              subLevelData,\\r\\n                                                              inputLevelData\\r\\n                                                            )\\r\\n                                                          \\\"\\r\\n                                                        ></i>\\r\\n                                                      </div>\\r\\n                                                    </div>\\r\\n                                                  </div>\\r\\n                                                </div>\\r\\n                                              </div>\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2NoYXJ0LW9mLWFjY291bnQtZGV0YWlsL2NoYXJ0LW9mLWFjY291bnQtZGV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, HostListener, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { AccountLevelLimits, AccountLevels } from 'src/app/shared/enum';\r\nimport { ChartOfAccountModel, AccountFilterTypeModel, AccountTypeModel } from '../models/chart-of-account.model';\r\nimport { ApplicationPages } from 'src/app/shared/applicationpagesenum';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppUrlService } from 'src/app/shared/services/app-url.service';\r\nimport { GlobalService } from 'src/app/shared/services/global-services.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonLoaderService } from 'src/app/shared/common-loader/common-loader.service';\r\nimport { LocalStorageService } from 'src/app/shared/services/localstorage.service';\r\nimport { GLOBAL } from 'src/app/shared/global';\r\nimport { AddAccountComponent } from '../add-account/add-account.component';\r\nimport { ChartOfAccountsPdfService } from '../chart-of-accounts-pdf.service';\r\n\r\n@Component({\r\n  selector: 'app-chart-of-account-detail',\r\n  templateUrl: './chart-of-account-detail.component.html',\r\n  styleUrls: ['./chart-of-account-detail.component.scss']\r\n  // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ChartOfAccountDetailComponent implements OnInit, OnChanges {\r\n  //#region \"variables\"\r\n  @Input() ACCOUNT_HEAD_TYPE: number;\r\n  @Input() ACCOUNT_HEAD_NAME: string;\r\n\r\n  // Form\r\n  mainLevelList: ChartOfAccountModel[];\r\n  chartOfAccountList: ChartOfAccountModel[] = [];\r\n  accountFilterTypeList: AccountFilterTypeModel[];\r\n  accountTypeList: AccountTypeModel[];\r\n\r\n  // screen\r\n  screenHeight: number;\r\n  screenWidth: number;\r\n  scrollStyles: any;\r\n\r\n  isEditingAllowed = false;\r\n  pageId = ApplicationPages.Assets;\r\n\r\n  //#endregion\r\n\r\n  constructor(\r\n    private globalService: GlobalService,\r\n    private appUrl: AppUrlService,\r\n    private toastr: ToastrService,\r\n    private commonLoaderService: CommonLoaderService,\r\n    private localStorageService: LocalStorageService,\r\n    public dialog: MatDialog,\r\n    private cofPdfService: ChartOfAccountsPdfService,\r\n    // private cd: ChangeDetectorRef\r\n  ) {\r\n    this.getScreenSize();\r\n  }\r\n\r\n  //#region \"Dynamic Scroll\"\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n\r\n    this.scrollStyles = {\r\n      'overflow-y': 'auto',\r\n      'height': this.screenHeight - 160 + 'px',\r\n      'overflow-x': 'hidden'\r\n    };\r\n  }\r\n  //#endregion\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // // console.log(changes);\r\n    // this.getMainLevelAccount(this.ACCOUNT_HEAD_TYPE);\r\n    // this.isEditingAllowed = this.localStorageService.IsEditingAllowed(this.pageId);\r\n    // this.cd.detectChanges();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.initList();\r\n    this.getAllAccountFilterType();\r\n    this.getAllAccountTypeByCategory();\r\n    this.getMainLevelAccount(this.ACCOUNT_HEAD_TYPE);\r\n    this.isEditingAllowed = this.localStorageService.IsEditingAllowed(this.pageId);\r\n  }\r\n\r\n  initList() { }\r\n\r\n  //#region \"on main level click, get control level account\"\r\n  onMainLevelClicked(model: any) {\r\n    // this.getAccountByParentId(data);\r\n\r\n    this.commonLoaderService.showLoader();\r\n\r\n    this.globalService\r\n      .getListById(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_GetAllAccountsByParentId,\r\n        model.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        data => {\r\n\r\n          // Main Level\r\n          const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n          const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n          this.chartOfAccountList[mainLevelIndex].Children = []; // intitialize\r\n\r\n          if (data.StatusCode === 200) {\r\n            if (data.data.AllAccountList != null) {\r\n              if (data.data.AllAccountList.length > 0) {\r\n                data.data.AllAccountList.forEach(element => {\r\n                  this.chartOfAccountList[mainLevelIndex].Children.push({\r\n                    ChartOfAccountNewId: element.ChartOfAccountNewId,\r\n                    AccountName: element.AccountName,\r\n                    ChartOfAccountNewCode: element.ChartOfAccountNewCode,\r\n                    ParentID: element.ParentID,\r\n                    AccountHeadTypeId: element.AccountHeadTypeId,\r\n                    AccountLevelId: element.AccountLevelId,\r\n                    AccountTypeId: element.AccountTypeId,\r\n                    AccountFilterTypeId: element.AccountFilterTypeId,\r\n\r\n                    Children: [],\r\n                    _IsDeleted: false,\r\n                    _IsLoading: false,\r\n                    _IsError: false,\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          }\r\n\r\n          this.commonLoaderService.hideLoader();\r\n        },\r\n        error => {\r\n          this.commonLoaderService.hideLoader();\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"on control level click, get sub level account\"\r\n  onControlLevelClicked(mainLevel: any, model: any) {\r\n\r\n    this.commonLoaderService.showLoader();\r\n\r\n    this.globalService\r\n      .getListById(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_GetAllAccountsByParentId,\r\n        model.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        data => {\r\n\r\n          // Main Level\r\n          const mainLevelItem = this.chartOfAccountList.find(\r\n            x => x.ChartOfAccountNewId === mainLevel.ChartOfAccountNewId\r\n          );\r\n          const mainLevelIndex = this.chartOfAccountList.indexOf(\r\n            mainLevelItem\r\n          );\r\n\r\n          // Control Level\r\n          const controlLevelItem = this.chartOfAccountList[\r\n            mainLevelIndex\r\n          ].Children.find(\r\n            x => x.ChartOfAccountNewId === model.ChartOfAccountNewId\r\n          );\r\n          const controlLevelIndex = this.chartOfAccountList[\r\n            mainLevelIndex\r\n          ].Children.indexOf(controlLevelItem);\r\n\r\n          this.chartOfAccountList[mainLevelIndex].Children[\r\n            controlLevelIndex\r\n          ].Children = []; // intitialize\r\n\r\n          if (data.StatusCode === 200) {\r\n            if (data.data.AllAccountList != null) {\r\n              if (data.data.AllAccountList.length > 0) {\r\n\r\n                data.data.AllAccountList.forEach(element => {\r\n                  this.chartOfAccountList[mainLevelIndex].Children[\r\n                    controlLevelIndex\r\n                  ].Children.push({\r\n                    ChartOfAccountNewId: element.ChartOfAccountNewId,\r\n                    AccountName: element.AccountName,\r\n                    ChartOfAccountNewCode: element.ChartOfAccountNewCode,\r\n                    ParentID: element.ParentID,\r\n                    AccountHeadTypeId: element.AccountHeadTypeId,\r\n                    AccountLevelId: element.AccountLevelId,\r\n                    AccountTypeId: element.AccountTypeId,\r\n                    AccountFilterTypeId: element.AccountFilterTypeId,\r\n\r\n                    Children: [],\r\n                    _IsDeleted: false,\r\n                    _IsLoading: false,\r\n                    _IsError: false,\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          }\r\n\r\n          this.commonLoaderService.hideLoader();\r\n        },\r\n        error => {\r\n          this.commonLoaderService.hideLoader();\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"on sub level click, get input level account\"\r\n  onSubLevelClicked(mainLevel, controlLevel, model) {\r\n\r\n\r\n    this.commonLoaderService.showLoader();\r\n\r\n    this.globalService\r\n      .getListById(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_GetAllAccountsByParentId,\r\n        model.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          if (data.StatusCode === 200) {\r\n            if (data.data.AllAccountList != null) {\r\n              if (data.data.AllAccountList.length > 0) {\r\n\r\n                // Main Level\r\n                const mainLevelItem = this.chartOfAccountList.find(\r\n                  x => x.ChartOfAccountNewId === mainLevel.ChartOfAccountNewId\r\n                );\r\n                const mainLevelIndex = this.chartOfAccountList.indexOf(\r\n                  mainLevelItem\r\n                );\r\n\r\n                // Control Level\r\n                const controlLevelItem = this.chartOfAccountList[\r\n                  mainLevelIndex\r\n                ].Children.find(\r\n                  x =>\r\n                    x.ChartOfAccountNewId === controlLevel.ChartOfAccountNewId\r\n                );\r\n                const controlLevelIndex = this.chartOfAccountList[\r\n                  mainLevelIndex\r\n                ].Children.indexOf(controlLevelItem);\r\n\r\n                // Sub Level\r\n                const subLevelItem = this.chartOfAccountList[\r\n                  mainLevelIndex\r\n                ].Children[controlLevelIndex].Children.find(\r\n                  x => x.ChartOfAccountNewId === model.ChartOfAccountNewId\r\n                );\r\n                const subLevelIndex = this.chartOfAccountList[\r\n                  mainLevelIndex\r\n                ].Children[controlLevelIndex].Children.indexOf(subLevelItem);\r\n\r\n                this.chartOfAccountList[mainLevelIndex].Children[\r\n                  controlLevelIndex\r\n                ].Children[subLevelIndex].Children = []; // intitialize\r\n\r\n                data.data.AllAccountList.forEach(element => {\r\n                  this.chartOfAccountList[mainLevelIndex].Children[\r\n                    controlLevelIndex\r\n                  ].Children[subLevelIndex].Children.push({\r\n                    ChartOfAccountNewId: element.ChartOfAccountNewId,\r\n                    AccountName: element.AccountName,\r\n                    ChartOfAccountNewCode: element.ChartOfAccountNewCode,\r\n                    ParentID: element.ParentID,\r\n                    AccountHeadTypeId: element.AccountHeadTypeId,\r\n                    AccountLevelId: element.AccountLevelId,\r\n                    AccountTypeId: element.AccountTypeId,\r\n                    AccountFilterTypeId: element.AccountFilterTypeId,\r\n\r\n                    Children: [],\r\n                    _IsDeleted: false,\r\n                    _IsError: false,\r\n                    _IsLoading: false\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          }\r\n          this.commonLoaderService.hideLoader();\r\n        },\r\n        error => {\r\n          this.commonLoaderService.hideLoader();\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"on input level click\"\r\n  onInputLevelClicked(mainLevel, controlLevel, subLevel, data) {\r\n\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"getAllAccountFilterType\"\r\n  getAllAccountFilterType() {\r\n    this.accountFilterTypeList = [];\r\n\r\n    this.commonLoaderService.showLoader();\r\n\r\n    this.globalService\r\n      .getList(this.appUrl.getApiUrl() + GLOBAL.API_Account_GetAllAccountFilter)\r\n      .subscribe(\r\n        data => {\r\n          if (data.StatusCode === 200) {\r\n            if (data.data.AllAccountFilterList != null) {\r\n              if (data.data.AllAccountFilterList.length > 0) {\r\n\r\n                data.data.AllAccountFilterList.forEach(element => {\r\n                  this.accountFilterTypeList.push({\r\n                    AccountFilterTypeId: element.AccountFilterTypeId,\r\n                    AccountFilterTypeName: element.AccountFilterTypeName\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          } else if (data.StatusCode === 400) {\r\n            this.toastr.error('Something went wrong ! Try Again');\r\n          }\r\n\r\n          this.commonLoaderService.hideLoader();\r\n        },\r\n        error => {\r\n          this.commonLoaderService.hideLoader();\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"getAllAccountTypeByCategory\"\r\n  getAllAccountTypeByCategory() {\r\n    this.accountTypeList = [];\r\n    this.globalService\r\n      .getListById(\r\n        this.appUrl.getApiUrl() +\r\n        GLOBAL.API_Code_GetAllAccountByAccountHeadTypeId,\r\n        this.ACCOUNT_HEAD_TYPE\r\n      )\r\n      .subscribe(data => {\r\n        if (data.StatusCode === 200) {\r\n          if (data.data.AccountTypeList != null) {\r\n            if (data.data.AccountTypeList.length > 0) {\r\n\r\n              data.data.AccountTypeList.forEach(element => {\r\n                this.accountTypeList.push({\r\n                  AccountTypeId: element.AccountTypeId,\r\n                  AccountTypeName: element.AccountTypeName,\r\n                  AccountCategory: element.AccountCategory,\r\n                  AccountHeadTypeId: element.AccountHeadTypeId\r\n                });\r\n              });\r\n            }\r\n          }\r\n        } else if (data.StatusCode === 400) {\r\n          this.toastr.error('Something went wrong ! Try Again');\r\n        }\r\n      });\r\n  }\r\n  //#endregion\r\n\r\n\r\n  //#region -- Main Level --\r\n\r\n  //#region \"getMainLevelAccount\"\r\n  getMainLevelAccount(id: number) {\r\n\r\n    this.chartOfAccountList = [];\r\n\r\n    this.commonLoaderService.showLoader();\r\n\r\n    this.globalService\r\n      .getListById(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_GetMainLevelAccount,\r\n        id\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          if (data.StatusCode === 200) {\r\n            if (data.data.MainLevelAccountList != null) {\r\n              if (data.data.MainLevelAccountList.length > 0) {\r\n                data.data.MainLevelAccountList.forEach(element => {\r\n                  this.chartOfAccountList.push({\r\n                    ChartOfAccountNewId: element.ChartOfAccountNewId,\r\n                    AccountName: element.AccountName,\r\n                    ChartOfAccountNewCode: element.ChartOfAccountNewCode,\r\n                    ParentID: element.ParentID,\r\n                    AccountHeadTypeId: element.AccountHeadTypeId,\r\n                    AccountLevelId: element.AccountLevelId,\r\n                    AccountTypeId: element.AccountTypeId,\r\n                    AccountFilterTypeId: element.AccountFilterTypeId,\r\n\r\n                    // Error Handling\r\n                    _IsDeleted: false,\r\n                    _IsLoading: false,\r\n                    _IsError: false,\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          } else if (data.StatusCode === 400) {\r\n            this.toastr.error('Something went wrong ! Try Again');\r\n          }\r\n\r\n          this.commonLoaderService.hideLoader();\r\n        },\r\n        error => {\r\n          this.commonLoaderService.hideLoader();\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"addMainLevelAccountDetail\"\r\n  addMainLevelAccountDetail(model: any) {\r\n\r\n    const count = this.chartOfAccountList.length;\r\n    if (count < AccountLevelLimits.MainLevel) {\r\n\r\n      const obj: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: 0,\r\n        AccountName: model.AccountName,\r\n        ParentID: model.ParentID,\r\n        AccountLevelId: model.AccountLevelId,\r\n        AccountHeadTypeId: model.AccountHeadTypeId,\r\n        AccountTypeId: model.AccountTypeId,\r\n        AccountFilterTypeId: model.AccountFilterTypeId\r\n      };\r\n\r\n      this.chartOfAccountList.push(obj);\r\n\r\n      // Error handling and loading handling\r\n      const item = this.chartOfAccountList.length - 1; // use to calculate the index\r\n      this.chartOfAccountList[item]._IsLoading = true;\r\n      this.chartOfAccountList[item]._IsError = false;\r\n\r\n      // // Error handling and loading handling\r\n      // const item = this.chartOfAccountList.find(x => x.OccupationOtherDetailId === model.OccupationOtherDetailId);\r\n      // const index = this.occupatonList.indexOf(item);\r\n      // this.occupatonList[index]._IsLoading = true;\r\n      // this.occupatonList[index]._IsError = false;\r\n\r\n\r\n      this.globalService\r\n        .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n        .subscribe(\r\n          response => {\r\n            if (response.StatusCode === 200) {\r\n\r\n              if (response.data.ChartOfAccountNewDetail !== null) {\r\n\r\n                const responseData = response.data.ChartOfAccountNewDetail;\r\n\r\n                obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n                obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n                obj.AccountName = responseData.AccountName;\r\n                obj.ParentID = responseData.ParentID;\r\n                obj.AccountLevelId = responseData.AccountLevelId;\r\n                obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n                obj.AccountTypeId = responseData.AccountTypeId;\r\n                obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n\r\n                obj.Children = [];\r\n                obj._IsDeleted = false;\r\n                obj._IsError = false;\r\n                obj._IsLoading = false;\r\n\r\n                // Update the Obj and Push into the list\r\n                this.chartOfAccountList[item] = obj;\r\n\r\n              }\r\n\r\n            } else if (response.StatusCode === 400) {\r\n\r\n              this.toastr.error(response.Message);\r\n\r\n              // Error Handling\r\n              this.chartOfAccountList[item]._IsLoading = false;\r\n              this.chartOfAccountList[item]._IsError = true;\r\n\r\n            } else {\r\n              // Error Handling\r\n              this.chartOfAccountList[item]._IsLoading = false;\r\n              this.chartOfAccountList[item]._IsError = true;\r\n            }\r\n\r\n          },\r\n          error => {\r\n            this.toastr.error('Something went wrong ! Try Again');\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[item]._IsLoading = false;\r\n            this.chartOfAccountList[item]._IsError = true;\r\n\r\n          }\r\n        );\r\n\r\n\r\n    } else {\r\n      this.toastr.error('Limit Exceeded');\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"editMainLevelAccountDetail\"\r\n  editMainLevelAccountDetail(model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    const index = this.chartOfAccountList.indexOf(item);\r\n    this.chartOfAccountList[index]._IsLoading = true;\r\n    this.chartOfAccountList[index]._IsError = false;\r\n\r\n\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_EditChartOfAccount,\r\n        obj\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[index]._IsLoading = false;\r\n            this.chartOfAccountList[index]._IsError = false;\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[index]._IsLoading = false;\r\n            this.chartOfAccountList[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[index]._IsLoading = false;\r\n          this.chartOfAccountList[index]._IsError = true;\r\n\r\n\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"deleteMainLevelAccountDetail\"\r\n  deleteMainLevelAccountDetail(model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    const index = this.chartOfAccountList.indexOf(item);\r\n    this.chartOfAccountList[index]._IsLoading = true;\r\n    this.chartOfAccountList[index]._IsError = false;\r\n\r\n\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_DeleteChartOfAccount,\r\n        obj.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            this.chartOfAccountList.splice(index, 1);\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[index]._IsLoading = false;\r\n            this.chartOfAccountList[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[index]._IsLoading = false;\r\n          this.chartOfAccountList[index]._IsError = true;\r\n\r\n\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n\r\n  //#region -- Control Level --\r\n\r\n\r\n  //#region \"addControlLevelAccountDetail\"\r\n  addControlLevelAccountDetail(mainLevelData: ChartOfAccountModel, model: any) {\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    const count = this.chartOfAccountList[mainLevelIndex].Children.length - 1;\r\n    if (count < AccountLevelLimits.ControlLevel) {\r\n\r\n      const obj: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: 0,\r\n        AccountName: model.AccountName,\r\n        ParentID: model.ParentID,\r\n        AccountLevelId: model.AccountLevelId,\r\n        AccountHeadTypeId: model.AccountHeadTypeId,\r\n        AccountTypeId: model.AccountTypeId,\r\n        AccountFilterTypeId: model.AccountFilterTypeId\r\n      };\r\n\r\n      this.chartOfAccountList[mainLevelIndex].Children.push(obj);\r\n\r\n      // Error handling and loading handling\r\n      const index = this.chartOfAccountList[mainLevelIndex].Children.length - 1; // use to calculate the index\r\n      this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = true;\r\n      this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = false;\r\n\r\n      // // Error handling and loading handling\r\n      // const item = this.chartOfAccountList.find(x => x.OccupationOtherDetailId === model.OccupationOtherDetailId);\r\n      // const index = this.occupatonList.indexOf(item);\r\n      // this.occupatonList[index]._IsLoading = true;\r\n      // this.occupatonList[index]._IsError = false;\r\n\r\n\r\n      this.globalService\r\n        .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n        .subscribe(\r\n          response => {\r\n            if (response.StatusCode === 200) {\r\n              if (response.data.ChartOfAccountNewDetail !== null) {\r\n                const responseData = response.data.ChartOfAccountNewDetail;\r\n                obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n                obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n                obj.AccountName = responseData.AccountName;\r\n                obj.ParentID = responseData.ParentID;\r\n                obj.AccountLevelId = responseData.AccountLevelId;\r\n                obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n                obj.AccountTypeId = responseData.AccountTypeId;\r\n                obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n                obj.Children = [];\r\n                obj._IsDeleted = false;\r\n                obj._IsError = false;\r\n                obj._IsLoading = false;\r\n\r\n                // Update the Obj and Push into the list\r\n                this.chartOfAccountList[mainLevelIndex].Children[index] = obj;\r\n              }\r\n\r\n            } else if (response.StatusCode === 400) {\r\n\r\n              this.toastr.error(response.Message);\r\n\r\n              // Error Handling\r\n              this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n              this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n\r\n            } else {\r\n              // Error Handling\r\n              this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n              this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n            }\r\n\r\n          },\r\n          error => {\r\n            this.toastr.error('Something went wrong ! Try Again');\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n        );\r\n\r\n\r\n    } else {\r\n      this.toastr.error('Limit Exceeded');\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"editControlLevelAccountDetail\"\r\n  editControlLevelAccountDetail(mainLevelData: ChartOfAccountModel, model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList[mainLevelIndex].Children.find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children.indexOf(item);\r\n    this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = true;\r\n    this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = false;\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_EditChartOfAccount,\r\n        obj\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = false;\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n          this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"deleteControlLevelAccountDetail\"\r\n  deleteControlLevelAccountDetail(mainLevelData: ChartOfAccountModel, model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList[mainLevelIndex].Children.find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children.indexOf(item);\r\n    this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = true;\r\n    this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = false;\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_DeleteChartOfAccount,\r\n        obj.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children.splice(index, 1);\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[mainLevelIndex].Children[index]._IsLoading = false;\r\n          this.chartOfAccountList[mainLevelIndex].Children[index]._IsError = true;\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n  //#region -- Sub Level --\r\n\r\n\r\n  //#region \"addSubLevelAccountDetail\"\r\n  addSubLevelAccountDetail(mainLevelData: ChartOfAccountModel, controlLevelData: ChartOfAccountModel, model: any) {\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n\r\n    // Control Level\r\n    const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === controlLevelData.ChartOfAccountNewId);\r\n    const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n      .indexOf(controlLevelItem);\r\n\r\n    const count = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.length - 1;\r\n    if (count < AccountLevelLimits.SubLevel) {\r\n\r\n      const obj: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: 0,\r\n        AccountName: model.AccountName,\r\n        ParentID: model.ParentID,\r\n        AccountLevelId: model.AccountLevelId,\r\n        AccountHeadTypeId: model.AccountHeadTypeId,\r\n        AccountTypeId: model.AccountTypeId,\r\n        AccountFilterTypeId: model.AccountFilterTypeId\r\n      };\r\n\r\n      this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.push(obj);\r\n\r\n      // Error handling and loading handling\r\n      const index = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.length - 1; // use to calculate the index\r\n      this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = true;\r\n      this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = false;\r\n\r\n      // // Error handling and loading handling\r\n      // const item = this.chartOfAccountList.find(x => x.OccupationOtherDetailId === model.OccupationOtherDetailId);\r\n      // const index = this.occupatonList.indexOf(item);\r\n      // this.occupatonList[index]._IsLoading = true;\r\n      // this.occupatonList[index]._IsError = false;\r\n\r\n\r\n      this.globalService\r\n        .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n        .subscribe(\r\n          response => {\r\n            if (response.StatusCode === 200) {\r\n              if (response.data.ChartOfAccountNewDetail !== null) {\r\n                const responseData = response.data.ChartOfAccountNewDetail;\r\n                obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n                obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n                obj.AccountName = responseData.AccountName;\r\n                obj.ParentID = responseData.ParentID;\r\n                obj.AccountLevelId = responseData.AccountLevelId;\r\n                obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n                obj.AccountTypeId = responseData.AccountTypeId;\r\n                obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n                obj.Children = [];\r\n                obj._IsDeleted = false;\r\n                obj._IsError = false;\r\n                obj._IsLoading = false;\r\n\r\n                // Update the Obj and Push into the list\r\n                this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index] = obj;\r\n              }\r\n\r\n            } else if (response.StatusCode === 400) {\r\n\r\n              this.toastr.error(response.Message);\r\n\r\n              // Error Handling\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n\r\n            } else {\r\n              // Error Handling\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n            }\r\n\r\n          },\r\n          error => {\r\n            this.toastr.error('Something went wrong ! Try Again');\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n        );\r\n\r\n\r\n    } else {\r\n      this.toastr.error('Limit Exceeded');\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"editSubLevelAccountDetail\"\r\n  editSubLevelAccountDetail(mainLevelData: ChartOfAccountModel, controlLevelData: ChartOfAccountModel, model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n    // // console.log(obj);\r\n\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    // Control Level\r\n    const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === controlLevelData.ChartOfAccountNewId);\r\n    const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n      .indexOf(controlLevelItem);\r\n\r\n    // const count = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.length - 1;\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    item.AccountName = obj.AccountName; // its needed\r\n    item.AccountFilterTypeId = obj.AccountFilterTypeId; // its needed\r\n    item.AccountTypeId = obj.AccountTypeId; // its needed\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.indexOf(item);\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = true;\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = false;\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_EditChartOfAccount,\r\n        obj\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          // // console.log(obj);\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = false;\r\n\r\n          } else if (response.StatusCode === 400) {\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"deleteSubLevelAccountDetail\"\r\n  deleteSubLevelAccountDetail(mainLevelData: ChartOfAccountModel, controlLevelData: ChartOfAccountModel, model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    // Control Level\r\n    const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === controlLevelData.ChartOfAccountNewId);\r\n    const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n      .indexOf(controlLevelItem);\r\n\r\n    // const count = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.length - 1;\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    item.AccountName = obj.AccountName; // its needed\r\n    item.AccountFilterTypeId = obj.AccountFilterTypeId; // its needed\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.indexOf(item);\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = true;\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = false;\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_DeleteChartOfAccount,\r\n        obj.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children.splice(index, 1);\r\n\r\n          } else if (response.StatusCode === 400) {\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsLoading = false;\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[index]._IsError = true;\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n\r\n\r\n  //#region -- Input Level --\r\n\r\n\r\n  //#region \"addInputLevelAccountDetail\"\r\n  addInputLevelAccountDetail(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel,\r\n    model: any\r\n  ) {\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n\r\n    // Control Level\r\n    const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === controlLevelData.ChartOfAccountNewId);\r\n    const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n      .indexOf(controlLevelItem);\r\n\r\n    // Sub Level\r\n    const subLevelItem = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === subLevelData.ChartOfAccountNewId);\r\n    const subLevelIndex = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .indexOf(subLevelItem);\r\n\r\n    const count = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.length - 1;\r\n    if (count < AccountLevelLimits.InputLevel) {\r\n\r\n      const obj: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: 0,\r\n        AccountName: model.AccountName,\r\n        ParentID: model.ParentID,\r\n        AccountLevelId: model.AccountLevelId,\r\n        AccountHeadTypeId: model.AccountHeadTypeId,\r\n        AccountTypeId: model.AccountTypeId,\r\n        AccountFilterTypeId: model.AccountFilterTypeId\r\n      };\r\n\r\n      this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.push(obj);\r\n\r\n      // Error handling and loading handling\r\n      const index = this.chartOfAccountList[mainLevelIndex]\r\n        .Children[controlLevelIndex].Children[subLevelIndex].Children.length - 1; // use to calculate the index\r\n      this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = true;\r\n      this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = false;\r\n\r\n      // // Error handling and loading handling\r\n      // const item = this.chartOfAccountList.find(x => x.OccupationOtherDetailId === model.OccupationOtherDetailId);\r\n      // const index = this.occupatonList.indexOf(item);\r\n      // this.occupatonList[index]._IsLoading = true;\r\n      // this.occupatonList[index]._IsError = false;\r\n\r\n\r\n      this.globalService\r\n        .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n        .subscribe(\r\n          response => {\r\n            if (response.StatusCode === 200) {\r\n              if (response.data.ChartOfAccountNewDetail !== null) {\r\n                const responseData = response.data.ChartOfAccountNewDetail;\r\n                obj.ChartOfAccountNewId = responseData.ChartOfAccountNewId;\r\n                obj.ChartOfAccountNewCode = responseData.ChartOfAccountNewCode;\r\n                obj.AccountName = responseData.AccountName;\r\n                obj.ParentID = responseData.ParentID;\r\n                obj.AccountLevelId = responseData.AccountLevelId;\r\n                obj.AccountHeadTypeId = responseData.AccountHeadTypeId;\r\n                obj.AccountTypeId = responseData.AccountTypeId;\r\n                obj.AccountFilterTypeId = responseData.AccountFilterTypeId;\r\n                obj.Children = [];\r\n                obj._IsDeleted = false;\r\n                obj._IsError = false;\r\n                obj._IsLoading = false;\r\n\r\n                // Update the Obj and Push into the list\r\n                this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index] = obj;\r\n\r\n\r\n              }\r\n\r\n            } else if (response.StatusCode === 400) {\r\n\r\n              this.toastr.error(response.Message);\r\n\r\n              // Error Handling\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n\r\n            } else {\r\n              // Error Handling\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n              this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n            }\r\n\r\n          },\r\n          error => {\r\n            this.toastr.error('Something went wrong ! Try Again');\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n        );\r\n\r\n\r\n    } else {\r\n      this.toastr.error('Limit Exceeded');\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"editInputLevelAccountDetail\"\r\n  editInputLevelAccountDetail(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel,\r\n    model: ChartOfAccountModel\r\n  ) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    // Control Level\r\n    const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === controlLevelData.ChartOfAccountNewId);\r\n    const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n      .indexOf(controlLevelItem);\r\n\r\n    // Sub Level\r\n    const subLevelItem = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === subLevelData.ChartOfAccountNewId);\r\n    const subLevelIndex = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .indexOf(subLevelItem);\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.indexOf(item);\r\n\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = true;\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = false;\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_EditChartOfAccount,\r\n        obj\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = false;\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"deleteInputLevelAccountDetail\"\r\n  deleteInputLevelAccountDetail(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel,\r\n    model: ChartOfAccountModel\r\n  ) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n    // Main Level\r\n    const mainLevelItem = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === mainLevelData.ChartOfAccountNewId);\r\n    const mainLevelIndex = this.chartOfAccountList.indexOf(mainLevelItem);\r\n\r\n    // Control Level\r\n    const controlLevelItem = this.chartOfAccountList[mainLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === controlLevelData.ChartOfAccountNewId);\r\n    const controlLevelIndex = this.chartOfAccountList[mainLevelIndex].Children\r\n      .indexOf(controlLevelItem);\r\n\r\n    // Sub Level\r\n    const subLevelItem = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === subLevelData.ChartOfAccountNewId);\r\n    const subLevelIndex = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children\r\n      .indexOf(subLevelItem);\r\n\r\n    // Error handling and loading handling\r\n    const item = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children\r\n      .find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    const index = this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.indexOf(item);\r\n\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = true;\r\n    this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = false;\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_DeleteChartOfAccount,\r\n        obj.ChartOfAccountNewId\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children.splice(index, 1);\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n            this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsLoading = false;\r\n          this.chartOfAccountList[mainLevelIndex].Children[controlLevelIndex].Children[subLevelIndex].Children[index]._IsError = true;\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region \" addAny\"\r\n  addAnyAccountDetail(model: any) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n    this.commonLoaderService.showLoader();\r\n\r\n    this.globalService\r\n      .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_AddChartOfAccount, obj)\r\n      .subscribe(\r\n        data => {\r\n          if (data.StatusCode === 200) {\r\n            this.getMainLevelAccount(this.ACCOUNT_HEAD_TYPE);\r\n          } else if (data.StatusCode === 400) {\r\n            this.toastr.error(data.Message);\r\n          }\r\n\r\n          this.commonLoaderService.hideLoader();\r\n        },\r\n        error => {\r\n          // error handling\r\n          this.toastr.error('Something went wrong ! Try Again');\r\n          this.commonLoaderService.hideLoader();\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"editAny\"\r\n  editAnyAccountDetail(model: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: model.ChartOfAccountNewId,\r\n      AccountName: model.AccountName,\r\n      ParentID: model.ParentID,\r\n      AccountLevelId: model.AccountLevelId,\r\n      AccountHeadTypeId: model.AccountHeadTypeId,\r\n      AccountTypeId: model.AccountTypeId,\r\n      AccountFilterTypeId: model.AccountFilterTypeId\r\n    };\r\n\r\n\r\n    // // Error handling and loading handling\r\n    // const item = this.chartOfAccountList.find(x => x.ChartOfAccountNewId === model.ChartOfAccountNewId);\r\n    // const index = this.chartOfAccountList.indexOf(item);\r\n    // this.chartOfAccountList[index]._IsLoading = true;\r\n    // this.chartOfAccountList[index]._IsError = false;\r\n\r\n\r\n\r\n    this.globalService\r\n      .post(\r\n        this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_EditChartOfAccount,\r\n        obj\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n\r\n            // Error Handling\r\n            // this.chartOfAccountList[index]._IsLoading = false;\r\n            // this.chartOfAccountList[index]._IsError = false;\r\n\r\n          } else if (response.StatusCode === 400) {\r\n\r\n            this.toastr.error(response.Message);\r\n\r\n            // Error Handling\r\n            // this.chartOfAccountList[index]._IsLoading = false;\r\n            // this.chartOfAccountList[index]._IsError = true;\r\n\r\n          }\r\n\r\n        },\r\n        error => {\r\n          // error handling\r\n\r\n          this.toastr.error('Someting went wrong! Try again');\r\n\r\n          // Error Handling\r\n          // this.chartOfAccountList[index]._IsLoading = false;\r\n          // this.chartOfAccountList[index]._IsError = true;\r\n\r\n\r\n        }\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onAddMainLevelAccount\"\r\n  onAddMainLevelAccount() {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: 0,\r\n      AccountName: '',\r\n      ParentID: -1,\r\n      AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n      AccountLevelId: AccountLevels.MainLevel,\r\n      AccountTypeId: null,\r\n      AccountFilterTypeId: null,\r\n    };\r\n    this.addMainLevelAccountDetail(obj);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onAddSubLevelClicked\"\r\n  onAddSubLevelClicked(mainLevelData: any, controlLevelData: any, data: any) {\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onAddControlLevelAccount\"\r\n  onAddControlLevelAccount(mainLevelData: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: 0,\r\n      AccountName: '',\r\n      ParentID: mainLevelData.ChartOfAccountNewId,\r\n      AccountLevelId: AccountLevels.ControlLevel,\r\n      AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n      AccountTypeId: null,\r\n      AccountFilterTypeId: null\r\n    };\r\n\r\n    this.addControlLevelAccountDetail(mainLevelData, obj);\r\n\r\n\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onAddSubLevelAccount\"\r\n  onAddSubLevelAccount(mainLevelData: any, controlLevelData: ChartOfAccountModel) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: 0,\r\n      AccountName: '',\r\n      ParentID: controlLevelData.ChartOfAccountNewId,\r\n      AccountLevelId: AccountLevels.SubLevel,\r\n      AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n      AccountTypeId: null,\r\n      AccountFilterTypeId: null\r\n    };\r\n\r\n    this.addSubLevelAccountDetail(mainLevelData, controlLevelData, obj);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onAddInputLevelAccount\"\r\n  onAddInputLevelAccount(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel\r\n  ) {\r\n    const obj: ChartOfAccountModel = {\r\n      ChartOfAccountNewId: 0,\r\n      AccountName: '',\r\n      ParentID: subLevelData.ChartOfAccountNewId,\r\n      AccountLevelId: AccountLevels.InputLevel,\r\n      AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n      AccountTypeId: null,\r\n      AccountFilterTypeId: null\r\n    };\r\n    // this.addAnyAccountDetail(obj);\r\n    this.addInputLevelAccountDetail(mainLevelData, controlLevelData, subLevelData, obj);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurAddControlLevel\"\r\n  onBlurAddControlLevel(mainLevelData: any, data: any) {\r\n    if (data !== '') {\r\n\r\n      const controlLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: 0,\r\n        AccountName: data,\r\n        ParentID: mainLevelData.ChartOfAccountNewId,\r\n        AccountLevelId: AccountLevels.ControlLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: null,\r\n        AccountFilterTypeId: null\r\n      };\r\n\r\n      this.addAnyAccountDetail(controlLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurEditMainLevel_AccountName\"\r\n  onBlurEditMainLevelAccountName(mainLevelData: any, data: any) {\r\n    if (data !== '') {\r\n      const mainLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: mainLevelData.ChartOfAccountNewId,\r\n        AccountName: data,\r\n        ParentID: mainLevelData.ParentID,\r\n        AccountLevelId: AccountLevels.MainLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: mainLevelData.AccountTypeId,\r\n        AccountFilterTypeId: mainLevelData.AccountFilterTypeId\r\n      };\r\n\r\n      this.editMainLevelAccountDetail(mainLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurEditControlLevel_AccountName\"\r\n  onBlurEditControlLevelAccountName(mainLevelData: ChartOfAccountModel, controlLevelData: any, data: any) {\r\n    if (data !== '') {\r\n\r\n      const controlLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: controlLevelData.ChartOfAccountNewId,\r\n        AccountName: data,\r\n        ParentID: controlLevelData.ParentID,\r\n        AccountLevelId: AccountLevels.ControlLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: controlLevelData.AccountTypeId,\r\n        AccountFilterTypeId: controlLevelData.AccountFilterTypeId\r\n      };\r\n\r\n      // this.editAnyAccountDetail(controlLevelDetail);\r\n      this.editControlLevelAccountDetail(mainLevelData, controlLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurEditSubLevel_AccountName\"\r\n  onBlurEditSubLevelAccountName(mainLevelData: any, controlLevelData: any, subLevelData: any, data: any) {\r\n    if (data !== '') {\r\n\r\n      const subLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: subLevelData.ChartOfAccountNewId,\r\n        AccountName: data,\r\n        ParentID: subLevelData.ParentID,\r\n        AccountLevelId: AccountLevels.SubLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: subLevelData.AccountTypeId,\r\n        AccountFilterTypeId: subLevelData.AccountFilterTypeId\r\n      };\r\n\r\n      // this.editAnyAccountDetail(subLevelDetail);\r\n      this.editSubLevelAccountDetail(mainLevelData, controlLevelData, subLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurEditSubLevel_AccountFilterType\"\r\n  onBlurEditSubLevelAccountFilterType(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel,\r\n    data: any\r\n  ) {\r\n\r\n    // console.log('subLevelData -- ', subLevelData);\r\n\r\n    if (data !== '') {\r\n\r\n      const subLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: subLevelData.ChartOfAccountNewId,\r\n        AccountName: subLevelData.AccountName,\r\n        ParentID: subLevelData.ParentID,\r\n        AccountLevelId: AccountLevels.SubLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: subLevelData.AccountTypeId,\r\n        AccountFilterTypeId: data\r\n      };\r\n\r\n      // console.log('AccountFilterType', subLevelDetail);\r\n\r\n      this.editSubLevelAccountDetail(mainLevelData, controlLevelData, subLevelDetail);\r\n      // this.editAnyAccountDetail(controlLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurEditSubLevel_AccountType\"\r\n  onBlurEditSubLevelAccountType(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel,\r\n    data: any\r\n  ) {\r\n\r\n  //   // console.log(data);\r\n\r\n    if (data !== '') {\r\n\r\n      const subLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: subLevelData.ChartOfAccountNewId,\r\n        AccountName: subLevelData.AccountName,\r\n        ParentID: subLevelData.ParentID,\r\n        AccountLevelId: AccountLevels.SubLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: data,\r\n        AccountFilterTypeId: subLevelData.AccountFilterTypeId\r\n      };\r\n\r\n      // console.log('AccountType', subLevelDetail);\r\n\r\n      this.editSubLevelAccountDetail(mainLevelData, controlLevelData, subLevelDetail);\r\n      // this.editAnyAccountDetail(controlLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onBlurEditInputLevelAccountName\"\r\n  onBlurEditInputLevelAccountName(mainLevelData: any, controlLevelData: any, subLevelData: any, inputLevelData: any, data: any) {\r\n    if (data !== '') {\r\n\r\n      const subLevelDetail: ChartOfAccountModel = {\r\n        ChartOfAccountNewId: inputLevelData.ChartOfAccountNewId,\r\n        AccountName: data,\r\n        ParentID: inputLevelData.ParentID,\r\n        AccountLevelId: AccountLevels.InputLevel,\r\n        AccountHeadTypeId: this.ACCOUNT_HEAD_TYPE,\r\n        AccountTypeId: inputLevelData.AccountTypeId,\r\n        AccountFilterTypeId: inputLevelData.AccountFilterTypeId\r\n      };\r\n\r\n      this.editInputLevelAccountDetail(mainLevelData, controlLevelData, subLevelData, subLevelDetail);\r\n\r\n      // this.editAnyAccountDetail(subLevelDetail);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"openAddAccountDialog\"\r\n  openAddAccountDialog(AccountLevel: number, mainLevelData: any, controlLevelData: any, subLevelData: any): void {\r\n    // NOTE: It passed the data into the Add Voucher Model\r\n\r\n    const dialogRef = this.dialog.open(AddAccountComponent, {\r\n      width: '450px',\r\n      data: {\r\n        AccountHeadType: this.ACCOUNT_HEAD_TYPE,\r\n        AccountList: this.chartOfAccountList,\r\n        mainLevelData: mainLevelData,\r\n        AccountLevel: AccountLevel,\r\n        controlLevelData: controlLevelData,\r\n        subLevelData: subLevelData\r\n      },\r\n      autoFocus: false\r\n    });\r\n\r\n    // dialogRef.componentInstance.onListRefresh.subscribe(() => {\r\n    //   this.getSavedExchangeRatesDate();\r\n    // });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"openAddAccountDialog\"\r\n  onAddMainLevelAccountDialog() {\r\n\r\n    this.openAddAccountDialog(AccountLevels.MainLevel, null, null, null);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"openAddAccountDialog\"\r\n  onAddControlLevelAccountDialog(mainLevelData: ChartOfAccountModel) {\r\n\r\n    this.openAddAccountDialog(AccountLevels.ControlLevel, mainLevelData, null, null);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"openAddAccountDialog\"\r\n  onAddSubLevelAccountDialog(mainLevelData: any, controlLevelData: ChartOfAccountModel) {\r\n\r\n    this.openAddAccountDialog(AccountLevels.SubLevel, mainLevelData, controlLevelData, null);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onAddInputLevelAccountDialog\"\r\n  onAddInputLevelAccountDialog(\r\n    mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel\r\n  ) {\r\n    this.openAddAccountDialog(AccountLevels.InputLevel, mainLevelData, controlLevelData, subLevelData);\r\n  }\r\n  //#endregion\r\n\r\n  onDeleteChartOfAccount(accountDetail: ChartOfAccountModel) {\r\n    this.deleteChartOfAccount(accountDetail);\r\n  }\r\n\r\n  //#region \"deleteChartOfAccount\"\r\n  deleteChartOfAccount(accountDetail: ChartOfAccountModel) {\r\n\r\n    this.globalService\r\n      .post(this.appUrl.getApiUrl() + GLOBAL.API_ChartOfAccount_DeleteChartOfAccount, accountDetail.ChartOfAccountNewId)\r\n      .subscribe(\r\n        response => {\r\n          if (response.StatusCode === 200) {\r\n            // do something\r\n          } else if (response.StatusCode === 400) {\r\n            this.toastr.error(response.Message);\r\n          }\r\n        },\r\n        error => {\r\n\r\n        });\r\n  }\r\n  //#endregion\r\n\r\n\r\n  //#region \"onDeleteMainLevel\"\r\n  onDeleteMainLevel(mainLevelData: ChartOfAccountModel) {\r\n    this.deleteMainLevelAccountDetail(mainLevelData);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onDeleteControlLevel\"\r\n  onDeleteControlLevel(mainLevelData: ChartOfAccountModel, controlLevelData: ChartOfAccountModel) {\r\n    this.deleteControlLevelAccountDetail(mainLevelData, controlLevelData);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onDeleteSubLevel\"\r\n  onDeleteSubLevel(mainLevelData: ChartOfAccountModel, controlLevelData: ChartOfAccountModel, subLevelData: ChartOfAccountModel) {\r\n    this.deleteSubLevelAccountDetail(mainLevelData, controlLevelData, subLevelData);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onDeleteInputLevel\"\r\n  onDeleteInputLevel(mainLevelData: ChartOfAccountModel,\r\n    controlLevelData: ChartOfAccountModel,\r\n    subLevelData: ChartOfAccountModel,\r\n    inputLevelData: ChartOfAccountModel) {\r\n    this.deleteInputLevelAccountDetail(mainLevelData, controlLevelData, subLevelData, inputLevelData);\r\n  }\r\n  //#endregion\r\n\r\n\r\n  onExportPdf() {\r\n    this.cofPdfService.ExportChartOfAccountPdf().subscribe(\r\n      response => {\r\n        if (response.statusCode === 200) {\r\n          // do something\r\n          // console.log(response.data);\r\n\r\n          // set dataSouce value for pdf\r\n          this.cofPdfService.dataSource = response.data;\r\n\r\n          this.cofPdfService.ExportToPdf();\r\n\r\n        } else if (response.statusCode === 400) {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error => {\r\n\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StaticUtilities } from 'src/app/shared/static-utilities';\r\nimport { GlobalService } from 'src/app/shared/services/global-services.service';\r\nimport { AppUrlService } from 'src/app/shared/services/app-url.service';\r\nimport { GLOBAL } from 'src/app/shared/global';\r\nimport { IResponseData } from '../vouchers/models/status-code.model';\r\nimport { map } from 'rxjs/internal/operators/map';\r\n\r\ndeclare const require: any;\r\nconst jsPDF = require('jspdf');\r\nrequire('jspdf-autotable');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChartOfAccountsPdfService {\r\n  margins = {\r\n    top: 40,\r\n    bottom: 40,\r\n    left: 40,\r\n    right: 40,\r\n    width: 480\r\n  };\r\n\r\n  dataSource: any = [];\r\n\r\n  constructor(\r\n    private globalService: GlobalService,\r\n    private appurl: AppUrlService\r\n  ) {}\r\n\r\n  ExportChartOfAccountPdf() {\r\n    return this.globalService\r\n      .getList(\r\n        this.appurl.getApiUrl() +\r\n          GLOBAL.API_Pdf_GetAllChartOfAccountHierarchyPdf\r\n      )\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x.ResponseData,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n\r\n  public ExportToPdf(): void {\r\n\r\n    const doc = new jsPDF('p', 'pt', 'a4');\r\n    doc.setFontSize(50);\r\n\r\n    const pageHeight = doc.internal.pageSize.height;\r\n    const pageWidth = doc.internal.pageSize.width;\r\n\r\n    doc.setFontSize(14);\r\n\r\n    let linePadding = 20;\r\n    const pageMiddle =\r\n      this.margins.width - this.margins.width / 2 + this.margins.left;\r\n    let splitTitle = '';\r\n    let textCurrentLocationYAxis = this.margins.top;\r\n\r\n    // main heading\r\n    splitTitle = doc.splitTextToSize(\r\n      'COORDINATION OF HUMANITARIAN ASSISTANCE',\r\n      this.margins.width\r\n    );\r\n    for (let i = 0; i < splitTitle.length; i++) {\r\n      doc.text(\r\n        StaticUtilities.pdfTextCenter(doc, splitTitle[i], 14),\r\n        textCurrentLocationYAxis,\r\n        splitTitle[i]\r\n      );\r\n      textCurrentLocationYAxis += linePadding;\r\n    }\r\n\r\n    // sub heading\r\n    splitTitle = doc.splitTextToSize('CHART OF ACCOUNTS', this.margins.width);\r\n    for (let i = 0; i < splitTitle.length; i++) {\r\n      doc.text(\r\n        StaticUtilities.pdfTextCenter(doc, splitTitle[i], 14),\r\n        textCurrentLocationYAxis,\r\n        splitTitle[i]\r\n      );\r\n      textCurrentLocationYAxis += linePadding;\r\n    }\r\n\r\n    doc.line(\r\n      this.margins.left,\r\n      textCurrentLocationYAxis,\r\n      pageWidth - this.margins.right,\r\n      textCurrentLocationYAxis\r\n    );\r\n\r\n    doc.setFontSize(11);\r\n\r\n    // col 1\r\n    let inlineHeaderContentColSm6 = (textCurrentLocationYAxis += linePadding);\r\n    splitTitle = doc.splitTextToSize(\r\n      'A/C No.',\r\n      this.margins.width - pageMiddle\r\n    );\r\n    for (let i = 0; i < splitTitle.length; i++) {\r\n      if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n        textCurrentLocationYAxis = this.margins.top;\r\n        doc.addPage();\r\n      }\r\n      doc.text(this.margins.left, textCurrentLocationYAxis, splitTitle[i]);\r\n      textCurrentLocationYAxis += linePadding;\r\n    }\r\n\r\n    linePadding = 10;\r\n    // col 2\r\n    // use to start the 2nd column content from 1st column content y-axis\r\n    textCurrentLocationYAxis = inlineHeaderContentColSm6;\r\n    splitTitle = doc.splitTextToSize(\r\n      'Account Description',\r\n      this.margins.width - pageMiddle\r\n    );\r\n    for (let i = 0; i < splitTitle.length; i++) {\r\n      if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n        textCurrentLocationYAxis = this.margins.top;\r\n        doc.addPage();\r\n      }\r\n      doc.text(pageMiddle, textCurrentLocationYAxis, splitTitle[i]);\r\n      textCurrentLocationYAxis += linePadding;\r\n    }\r\n\r\n    doc.line(\r\n      this.margins.left,\r\n      textCurrentLocationYAxis,\r\n      pageWidth - this.margins.right,\r\n      textCurrentLocationYAxis\r\n    );\r\n    textCurrentLocationYAxis += linePadding;\r\n\r\n\r\n    // main level\r\n    for (const itemMain of this.dataSource) {\r\n      if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n        textCurrentLocationYAxis = this.margins.top;\r\n        doc.addPage();\r\n      }\r\n\r\n      // col 1\r\n      inlineHeaderContentColSm6 = textCurrentLocationYAxis += linePadding;\r\n      doc.text(\r\n        this.margins.left,\r\n        textCurrentLocationYAxis,\r\n        itemMain.ChartOfAccountCode\r\n      );\r\n      textCurrentLocationYAxis += linePadding;\r\n\r\n      // col 2\r\n      // use to start the 2nd column content from 1st column content y-axis\r\n      textCurrentLocationYAxis = inlineHeaderContentColSm6;\r\n      splitTitle = doc.splitTextToSize(\r\n        itemMain.AccountName,\r\n        this.margins.width - this.margins.right\r\n      );\r\n      for (let i = 0; i < splitTitle.length; i++) {\r\n        doc.text(\r\n          this.margins.left + 80,\r\n          textCurrentLocationYAxis,\r\n          splitTitle[i]\r\n        );\r\n        textCurrentLocationYAxis += linePadding;\r\n        if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n          textCurrentLocationYAxis = this.margins.top;\r\n          doc.addPage();\r\n        }\r\n      }\r\n\r\n      // control level\r\n      for (const itemControl of itemMain.ChildAccounts) {\r\n        // col 1\r\n        inlineHeaderContentColSm6 = textCurrentLocationYAxis += linePadding;\r\n        doc.text(\r\n          this.margins.left,\r\n          textCurrentLocationYAxis,\r\n          itemControl.ChartOfAccountCode\r\n        );\r\n        textCurrentLocationYAxis += linePadding;\r\n\r\n        // col 2\r\n        // use to start the 2nd column content from 1st column content y-axis\r\n        textCurrentLocationYAxis = inlineHeaderContentColSm6;\r\n        splitTitle = doc.splitTextToSize(\r\n          itemControl.AccountName,\r\n          this.margins.width - this.margins.right\r\n        );\r\n        for (let i = 0; i < splitTitle.length; i++) {\r\n          doc.text(\r\n            this.margins.left + 110,\r\n            textCurrentLocationYAxis,\r\n            splitTitle[i]\r\n          );\r\n          textCurrentLocationYAxis += linePadding;\r\n          if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n            textCurrentLocationYAxis = this.margins.top;\r\n            doc.addPage();\r\n          }\r\n        }\r\n\r\n        // sub level\r\n        for (const itemSub of itemControl.ChildAccounts) {\r\n          // col 1\r\n          inlineHeaderContentColSm6 = textCurrentLocationYAxis += linePadding;\r\n          doc.text(\r\n            this.margins.left,\r\n            textCurrentLocationYAxis,\r\n            itemSub.ChartOfAccountCode\r\n          );\r\n          textCurrentLocationYAxis += linePadding;\r\n\r\n          // col 2\r\n          // use to start the 2nd column content from 1st column content y-axis\r\n          textCurrentLocationYAxis = inlineHeaderContentColSm6;\r\n          splitTitle = doc.splitTextToSize(\r\n            itemSub.AccountName,\r\n            this.margins.width - this.margins.right\r\n          );\r\n          for (let i = 0; i < splitTitle.length; i++) {\r\n            doc.text(\r\n              this.margins.left + 140,\r\n              textCurrentLocationYAxis,\r\n              splitTitle[i]\r\n            );\r\n            textCurrentLocationYAxis += linePadding;\r\n            if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n              textCurrentLocationYAxis = this.margins.top;\r\n              doc.addPage();\r\n            }\r\n          }\r\n\r\n          // input level\r\n          for (const itemInput of itemSub.ChildAccounts) {\r\n            // col 1\r\n            inlineHeaderContentColSm6 = textCurrentLocationYAxis += linePadding;\r\n            doc.text(\r\n              this.margins.left,\r\n              textCurrentLocationYAxis,\r\n              itemInput.ChartOfAccountCode\r\n            );\r\n            textCurrentLocationYAxis += linePadding;\r\n\r\n            // col 2\r\n            // use to start the 2nd column content from 1st column content y-axis\r\n            textCurrentLocationYAxis = inlineHeaderContentColSm6;\r\n            splitTitle = doc.splitTextToSize(\r\n              itemInput.AccountName,\r\n              this.margins.width - this.margins.right\r\n            );\r\n            for (let i = 0; i < splitTitle.length; i++) {\r\n              doc.text(\r\n                this.margins.left + 170,\r\n                textCurrentLocationYAxis,\r\n                splitTitle[i]\r\n              );\r\n              textCurrentLocationYAxis += linePadding;\r\n              if (textCurrentLocationYAxis > pageHeight - this.margins.bottom) {\r\n                textCurrentLocationYAxis = this.margins.top;\r\n                doc.addPage();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      textCurrentLocationYAxis += 20;\r\n    }\r\n\r\n    doc.save('chart-of-account.pdf');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChartOfAccountsComponent } from './chart-of-accounts.component';\r\nimport { AssetsComponent } from './assets/assets.component';\r\nimport { RoleGuardService } from 'src/app/shared/services/role-guard';\r\nimport {\r\n  accountingNewMaster,\r\n  ApplicationModule\r\n} from 'src/app/shared/applicationpagesenum';\r\nimport { LiabilitiesComponent } from './liabilities/liabilities.component';\r\nimport { FundsComponent } from './funds/funds.component';\r\nimport { IncomeComponent } from './income/income.component';\r\nimport { ExpenseComponent } from './expense/expense.component';\r\n\r\nconst ModuleId: number = ApplicationModule.AccountingNew;\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChartOfAccountsComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'assets',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'assets',\r\n        component: AssetsComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: {\r\n          module: ModuleId,\r\n          page: accountingNewMaster.Assets\r\n        }\r\n      },\r\n      {\r\n        path: 'liabilities',\r\n        component: LiabilitiesComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: {\r\n          module: ModuleId,\r\n          page: accountingNewMaster.Liabilities\r\n        }\r\n      },\r\n      { path: 'funds', component: FundsComponent },\r\n      {\r\n        path: 'income',\r\n        component: IncomeComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: {\r\n          module: ModuleId,\r\n          page: accountingNewMaster.Income\r\n        }\r\n      },\r\n      {\r\n        path: 'expense',\r\n        component: ExpenseComponent,\r\n        canActivate: [RoleGuardService],\r\n        data: {\r\n          module: ModuleId,\r\n          page: accountingNewMaster.Expense\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChartOfAccountsRoutingModule {}\r\n","module.exports = \"<div class=\\\"main_body\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2NoYXJ0LW9mLWFjY291bnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { IMenuList } from 'src/app/shared/dbheader/dbheader.component';\r\nimport { LocalStorageService } from 'src/app/shared/services/localstorage.service';\r\nimport { accountingNewMaster } from 'src/app/shared/applicationpagesenum';\r\nimport { GlobalSharedService } from 'src/app/shared/services/global-shared.service';\r\nimport { UIModuleHeaders } from 'src/app/shared/enum';\r\n\r\n@Component({\r\n  selector: 'app-chart-of-accounts',\r\n  templateUrl: './chart-of-accounts.component.html',\r\n  styleUrls: ['./chart-of-accounts.component.scss']\r\n})\r\nexport class ChartOfAccountsComponent implements OnInit {\r\n  setSelectedHeader = UIModuleHeaders.ChartOfAccountHeader;\r\n  setProjectHeader = 'Chart Of Accounts';\r\n  menuList: IMenuList[] = [\r\n    {\r\n      Id: 1,\r\n      PageId: accountingNewMaster.Assets,\r\n      Text: 'Assets',\r\n      Link: '/accounting/chart-of-accounts/assets'\r\n    },\r\n    {\r\n      Id: 2,\r\n      PageId: accountingNewMaster.Liabilities,\r\n      Text: 'Liabilities',\r\n      Link: '/accounting/chart-of-accounts/liabilities'\r\n    },\r\n    {\r\n      Id: 3,\r\n      PageId: accountingNewMaster.Income,\r\n      Text: 'Income',\r\n      Link: '/accounting/chart-of-accounts/income'\r\n    },\r\n    {\r\n      Id: 4,\r\n      PageId: accountingNewMaster.Expense,\r\n      Text: 'Expense',\r\n      Link: '/accounting/chart-of-accounts/expense'\r\n    }\r\n  ];\r\n  authorizedMenuList: IMenuList[] = [];\r\n\r\n  constructor(\r\n    private globalService: GlobalSharedService,\r\n    private localStorageservice: LocalStorageService\r\n  ) {\r\n    // Set Menu Header Name\r\n    this.globalService.setMenuHeaderName(this.setProjectHeader);\r\n\r\n    this.authorizedMenuList = this.localStorageservice.GetAuthorizedPages(\r\n      this.menuList\r\n    );\r\n\r\n    // Set Menu Header List\r\n    this.globalService.setMenuList(this.authorizedMenuList);\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChartOfAccountsRoutingModule } from './chart-of-accounts-routing.module';\r\nimport { AddAccountComponent } from './add-account/add-account.component';\r\nimport { AssetsComponent } from './assets/assets.component';\r\nimport { ExpenseComponent } from './expense/expense.component';\r\nimport { FundsComponent } from './funds/funds.component';\r\nimport { IncomeComponent } from './income/income.component';\r\nimport { LiabilitiesComponent } from './liabilities/liabilities.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TooltipModule } from 'primeng/primeng';\r\nimport { ChartOfAccountsComponent } from './chart-of-accounts.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ChartOfAccountDetailComponent } from './chart-of-account-detail/chart-of-account-detail.component';\r\nimport { ChartOfAccountsPdfService } from './chart-of-accounts-pdf.service';\r\nimport { SubHeaderTemplateModule } from 'projects/library/src/sub-header-template/sub-header-template.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChartOfAccountsComponent,\r\n    AddAccountComponent,\r\n    AssetsComponent,\r\n    ExpenseComponent,\r\n    FundsComponent,\r\n    IncomeComponent,\r\n    LiabilitiesComponent,\r\n    ChartOfAccountDetailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ChartOfAccountsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SubHeaderTemplateModule,\r\n\r\n    // material\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    TooltipModule\r\n  ],\r\n  entryComponents: [AddAccountComponent],\r\n  providers: [ChartOfAccountsPdfService]\r\n})\r\nexport class ChartOfAccountsModule {}\r\n","module.exports = \"<app-chart-of-account-detail\\r\\n  [ACCOUNT_HEAD_TYPE]=\\\"ACCOUNT_HEAD_TYPE\\\"\\r\\n  [ACCOUNT_HEAD_NAME]=\\\"ACCOUNT_HEAD_NAME\\\"\\r\\n>\\r\\n</app-chart-of-account-detail>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2V4cGVuc2UvZXhwZW5zZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountHeadTypes_Enum } from 'src/app/shared/enum';\r\n\r\n@Component({\r\n  selector: 'app-expense',\r\n  templateUrl: './expense.component.html',\r\n  styleUrls: ['./expense.component.scss']\r\n})\r\nexport class ExpenseComponent implements OnInit {\r\n\r\n  ACCOUNT_HEAD_TYPE = AccountHeadTypes_Enum.Expense;\r\n  ACCOUNT_HEAD_NAME = AccountHeadTypes_Enum[this.ACCOUNT_HEAD_TYPE];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<app-chart-of-account-detail\\r\\n  [ACCOUNT_HEAD_TYPE]=\\\"ACCOUNT_HEAD_TYPE\\\"\\r\\n  [ACCOUNT_HEAD_NAME]=\\\"ACCOUNT_HEAD_NAME\\\"\\r\\n>\\r\\n</app-chart-of-account-detail>\\r\\n\"","module.exports = \".margin_left_10 {\\n  margin-left: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvZnVuZHMvZDpcXERheSBVc2VyXFxBdmluYXNoXFxPZmZpY2lhbFxcSHVtYW5pdGFyaWFuXFxHaXRMYWJSZXBvXFxjbGVhci1mdXNpb25cXEh1bWFuaXRhcmlhbkFzc2lzdGFuY2UuV2ViQXBpXFxOZXdVSS9zcmNcXGFwcFxcZGFzaGJvYXJkXFxhY2NvdW50aW5nXFxjaGFydC1vZi1hY2NvdW50c1xcZnVuZHNcXGZ1bmRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvYWNjb3VudGluZy9jaGFydC1vZi1hY2NvdW50cy9mdW5kcy9mdW5kcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXJnaW5fbGVmdF8xMHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountHeadTypes_Enum } from 'src/app/shared/enum';\r\n\r\n\r\n@Component({\r\n  selector: 'app-funds',\r\n  templateUrl: './funds.component.html',\r\n  styleUrls: ['./funds.component.scss']\r\n})\r\nexport class FundsComponent implements OnInit {\r\n\r\n  ACCOUNT_HEAD_TYPE = AccountHeadTypes_Enum.OwnersEquity;\r\n  ACCOUNT_HEAD_NAME = AccountHeadTypes_Enum[this.ACCOUNT_HEAD_TYPE];\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","module.exports = \"<app-chart-of-account-detail\\r\\n  [ACCOUNT_HEAD_TYPE]=\\\"ACCOUNT_HEAD_TYPE\\\"\\r\\n  [ACCOUNT_HEAD_NAME]=\\\"ACCOUNT_HEAD_NAME\\\"\\r\\n>\\r\\n</app-chart-of-account-detail>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2luY29tZS9pbmNvbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountHeadTypes_Enum } from 'src/app/shared/enum';\r\n\r\n@Component({\r\n  selector: 'app-income',\r\n  templateUrl: './income.component.html',\r\n  styleUrls: ['./income.component.scss']\r\n})\r\nexport class IncomeComponent implements OnInit {\r\n\r\n  ACCOUNT_HEAD_TYPE = AccountHeadTypes_Enum.Income;\r\n  ACCOUNT_HEAD_NAME = AccountHeadTypes_Enum[this.ACCOUNT_HEAD_TYPE];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","module.exports = \"<app-chart-of-account-detail\\r\\n  [ACCOUNT_HEAD_TYPE]=\\\"ACCOUNT_HEAD_TYPE\\\"\\r\\n  [ACCOUNT_HEAD_NAME]=\\\"ACCOUNT_HEAD_NAME\\\"\\r\\n>\\r\\n</app-chart-of-account-detail>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2xpYWJpbGl0aWVzL2xpYWJpbGl0aWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountHeadTypes_Enum } from 'src/app/shared/enum';\r\n\r\n\r\n@Component({\r\n  selector: 'app-liabilities',\r\n  templateUrl: './liabilities.component.html',\r\n  styleUrls: ['./liabilities.component.scss']\r\n})\r\nexport class LiabilitiesComponent implements OnInit {\r\n\r\n  ACCOUNT_HEAD_TYPE = AccountHeadTypes_Enum.Liabilities;\r\n  ACCOUNT_HEAD_NAME = AccountHeadTypes_Enum[this.ACCOUNT_HEAD_TYPE];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","import * as jsPDF from 'jspdf';\r\n\r\nexport class StaticUtilities {\r\n  static pdfTextCenter(doc: jsPDF, text: string, fontsize: number) {\r\n    const pageWidth = doc.internal.pageSize.width;\r\n    const txtWidth =\r\n      (doc.getStringUnitWidth(text) * fontsize) / doc.internal.scaleFactor;\r\n    return (pageWidth - txtWidth) / 2;\r\n  }\r\n  static pdfTextRight(doc: jsPDF, text: string, fontsize: number) {\r\n    const pageWidth = doc.internal.pageSize.width;\r\n    const txtWidth =\r\n      (doc.getStringUnitWidth(text) * fontsize) / doc.internal.scaleFactor;\r\n    return pageWidth - txtWidth - 10;\r\n  }\r\n\r\n  //#region \"setLocalDate\"\r\n  static setLocalDate(date: any) {\r\n    if (date === null || date === undefined) {\r\n      return null;\r\n    } else {\r\n      return new Date(\r\n        new Date(date).getTime() - new Date().getTimezoneOffset() * 60000\r\n      );\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"getLocalDate\"\r\n  static getLocalDate(date: any) {\r\n    return new Date(\r\n      new Date(date).getFullYear(),\r\n      new Date(date).getMonth(),\r\n      new Date(date).getDate(),\r\n      new Date().getHours(),\r\n      new Date().getMinutes(),\r\n      new Date().getSeconds(),\r\n      new Date().getMilliseconds()\r\n    );\r\n  }\r\n\r\n  static groupBy(list, keyGetter) {\r\n    let newmap = new Map();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = newmap.get(key);\r\n         if (!collection) {\r\n          newmap.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    newmap = new Map(Array.from(newmap).sort((a, b) => a[0] > b[0] ? 1 : -1));\r\n    return newmap;\r\n  }\r\n  //#endregion\r\n}\r\n"],"sourceRoot":""}