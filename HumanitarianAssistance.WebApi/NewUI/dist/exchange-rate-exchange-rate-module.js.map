{"version":3,"sources":["webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-add/exchange-rate-add.component.html","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-add/exchange-rate-add.component.scss","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-add/exchange-rate-add.component.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-detail/exchange-rate-detail.component.html","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-detail/exchange-rate-detail.component.scss","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-detail/exchange-rate-detail.component.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-listing/exchange-rate-listing.component.html","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-listing/exchange-rate-listing.component.scss","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-listing/exchange-rate-listing.component.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-listing/exchange-rate.service.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate-routing.module.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate.component.html","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate.component.scss","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate.component.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/exchange-rate.module.ts","webpack:///./src/app/dashboard/accounting/exchange-rate/verify-exchange-rate/verify-exchange-rate.component.html","webpack:///./src/app/dashboard/accounting/exchange-rate/verify-exchange-rate/verify-exchange-rate.component.scss","webpack:///./src/app/dashboard/accounting/exchange-rate/verify-exchange-rate/verify-exchange-rate.component.ts"],"names":[],"mappings":"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","file":"exchange-rate-exchange-rate-module.js","sourcesContent":["module.exports = \"<div>\\r\\n  <h1 mat-dialog-title>\\r\\n    New Exchange Rate\\r\\n    <button mat-icon-button [mat-dialog-close]=\\\"data\\\" class=\\\"pull-right\\\">\\r\\n      <mat-icon aria-label=\\\"clear\\\">clear</mat-icon>\\r\\n    </button>\\r\\n  </h1>\\r\\n  <div mat-dialog-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <mat-horizontal-stepper\\r\\n          linear\\r\\n          #stepper\\r\\n          (selectionChange)=\\\"ExchangeRateGenerationStepChanged($event)\\\"\\r\\n        >\\r\\n          <mat-step [stepControl]=\\\"exchangeRateAddModel\\\">\\r\\n            <br />\\r\\n            <p>\\r\\n              Select currency and date you want to initiate exchange rates for\\r\\n            </p>\\r\\n            <br />\\r\\n            <form [formGroup]=\\\"exchangeRateAddModel\\\">\\r\\n              <ng-template matStepLabel>Fill Currency</ng-template>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <mat-select\\r\\n                          placeholder=\\\"Currency\\\"\\r\\n                          name=\\\"CurrencyId\\\"\\r\\n                          formControlName=\\\"CurrencyId\\\"\\r\\n                        >\\r\\n                          <mat-option\\r\\n                            *ngFor=\\\"let item of data.currencyList\\\"\\r\\n                            [value]=\\\"item.CurrencyId\\\"\\r\\n                          >\\r\\n                            {{ item.CurrencyName }}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n\\r\\n                      <mat-form-field>\\r\\n                        <input\\r\\n                          matInput\\r\\n                          [matDatepicker]=\\\"dateFilterPicker\\\"\\r\\n                          name=\\\"Date\\\"\\r\\n                          formControlName=\\\"Date\\\"\\r\\n                          placeholder=\\\"Date\\\"\\r\\n                        />\\r\\n                        <mat-datepicker-toggle\\r\\n                          matSuffix\\r\\n                          [for]=\\\"dateFilterPicker\\\"\\r\\n                        ></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #dateFilterPicker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <button mat-raised-button matStepperNext>Next</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-step>\\r\\n          <mat-step [stepControl]=\\\"exchangeRateGenerateModel\\\">\\r\\n            <br />\\r\\n            <p>\\r\\n              Please set the exchange rates from your selected currency to the\\r\\n              displayed currencies\\r\\n            </p>\\r\\n            <br />\\r\\n            <form\\r\\n              [formGroup]=\\\"exchangeRateGenerateModel\\\"\\r\\n              (ngSubmit)=\\\"SaveSelectedCurrencyExchangeRates()\\\"\\r\\n            >\\r\\n              <ng-template matStepLabel>Generate Exchange Rate</ng-template>\\r\\n              <!-- <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n                  </mat-form-field> -->\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  FROM <strong>{{ selectedCurrencyName }}</strong> TO\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\" formArrayName=\\\"Currencies\\\">\\r\\n                  <div\\r\\n                    *ngFor=\\\"\\r\\n                      let currency of exchangeRateGenerateModel.get(\\r\\n                        'Currencies'\\r\\n                      )['controls'];\\r\\n                      let i = index\\r\\n                    \\\"\\r\\n                  >\\r\\n                    <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <label>{{ currency.value.CurrencyName }}</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <mat-form-field>\\r\\n                          <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"Rate\\\"\\r\\n                            matInput\\r\\n                            placeholder=\\\"Rate\\\"\\r\\n                          />\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  matStepperPrevious\\r\\n                  [disabled]=\\\"addExchangeRateLoader\\\"\\r\\n                >\\r\\n                  Back\\r\\n                </button>\\r\\n                &nbsp;\\r\\n\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  color=\\\"accent\\\"\\r\\n                  [disabled]=\\\"\\r\\n                    !exchangeRateGenerateModel.valid || addExchangeRateLoader\\r\\n                  \\\"\\r\\n                  (click)=\\\"SaveSelectedCurrencyExchangeRates()\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                >\\r\\n                  <span class=\\\"display_inline_block\\\">\\r\\n                    <mat-spinner\\r\\n                      *ngIf=\\\"addExchangeRateLoader\\\"\\r\\n                      [diameter]=\\\"15\\\"\\r\\n                    ></mat-spinner>\\r\\n                  </span>\\r\\n                  Save\\r\\n                </button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-step>\\r\\n        </mat-horizontal-stepper>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div mat-dialog-actions class=\\\"pull-right\\\"></div> -->\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2V4Y2hhbmdlLXJhdGUvZXhjaGFuZ2UtcmF0ZS1hZGQvZXhjaGFuZ2UtcmF0ZS1hZGQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject, EventEmitter } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { IResponseData } from '../../vouchers/models/status-code.model';\r\nimport { IExchangeRateAddModel } from '../models/exchange-rate.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\r\nimport { ExchangeRateService } from '../exchange-rate-listing/exchange-rate.service';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\nimport { CommonLoaderService } from '../../../../shared/common-loader/common-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-exchange-rate-add',\r\n  templateUrl: './exchange-rate-add.component.html',\r\n  styleUrls: ['./exchange-rate-add.component.scss'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {showError: true}\r\n  }]\r\n})\r\nexport class ExchangeRateAddComponent implements OnInit {\r\n\r\n  exchangeRateAddModel: FormGroup;\r\n  exchangeRateGenerateModel: FormGroup;\r\n  addExchangeRateLoader = false;\r\n  onListRefresh = new EventEmitter();\r\n  CurrencyList: any[] = [];\r\n  selectedCurrencyId: number;\r\n  selectedCurrencyName: string;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private exchangeRateService: ExchangeRateService,\r\n    public dialogRef: MatDialogRef<ExchangeRateAddComponent>,\r\n    public commonLoader: CommonLoaderService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public toastr: ToastrService) {\r\n      this.CurrencyList = this.data.currencyList;\r\n      this.FormInitialize();\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  FormInitialize() {\r\n    this.exchangeRateAddModel = this.fb.group({\r\n      CurrencyId: ['', [Validators.required]],\r\n      Date: [new Date(), [Validators.required]],\r\n    });\r\n\r\n    this.exchangeRateGenerateModel = this.fb.group({\r\n      Currencies: this.fb.array([], Validators.required)\r\n    });\r\n\r\n    this.addCurrency();\r\n  }\r\n\r\n  get formData() { return this.exchangeRateGenerateModel.get('Currencies'); }\r\n\r\n  addCurrency() {\r\n    // add Currency to the list\r\n      const control = <FormArray>this.exchangeRateGenerateModel.controls.Currencies;\r\n\r\n      this.CurrencyList.forEach(x => {\r\n        control.push(\r\n          this.fb.group({\r\n          CurrencyId: x.CurrencyId,\r\n          CurrencyName: x.CurrencyName,\r\n          Rate: new FormControl(null, Validators.required),\r\n          FromCurrency:  null,\r\n          }));\r\n      });\r\n}\r\n  //#region \"addExchangeRate\"\r\n  addExchangeRate(data: IExchangeRateAddModel) {\r\n\r\n  }\r\n  //#endregion\r\n\r\n  ExchangeRateGenerationStepChanged(event: any) {\r\n    const currencyDetail = this.CurrencyList.find(x => x.CurrencyId === this.exchangeRateAddModel.value.CurrencyId);\r\n    this.selectedCurrencyId = currencyDetail.CurrencyId;\r\n    this.selectedCurrencyName = currencyDetail.CurrencyName;\r\n  }\r\n\r\n  SaveSelectedCurrencyExchangeRates() {\r\n    if (this.exchangeRateAddModel.valid && this.exchangeRateGenerateModel.valid) {\r\n\r\n      this.addExchangeRateLoader = true;\r\n\r\n      const exchangeRateData: any[] = [];\r\n\r\n      this.exchangeRateGenerateModel.value.Currencies.forEach(x =>\r\n        exchangeRateData.push({\r\n          FromCurrencyId: this.exchangeRateAddModel.value.CurrencyId,\r\n          ToCurrencyId: x.CurrencyId,\r\n          Rate: x.Rate,\r\n          Date: this.exchangeRateService.getLocalDate(this.exchangeRateAddModel.value.Date)\r\n        }));\r\n\r\n\r\n      this.exchangeRateService.AddExchangeRate(exchangeRateData).subscribe(\r\n        (response: IResponseData) => {\r\n          if (response.statusCode === 200) {\r\n            this.dialogRef.close(true);\r\n            this.exchangeRateListRefresh();\r\n            this.toastr.success('Added Exchange Rate successfully');\r\n          } else {\r\n            this.toastr.error(response.message);\r\n          }\r\n          this.addExchangeRateLoader = false;\r\n        },\r\n        (error) => {\r\n          this.toastr.error('Someting went wrong');\r\n          this.addExchangeRateLoader = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  //#region \"onCancelPopup\"\r\n  onCancelPopup(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"onListRefresh\"\r\n  exchangeRateListRefresh() {\r\n    this.onListRefresh.emit();\r\n  }\r\n  //#endregion\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <!-- <div class=\\\"col-sm-12\\\" *ngIf=\\\"exchangeRateLoader\\\">\\r\\n      <mat-spinner class=\\\"center_loader\\\" diameter=\\\"50\\\"></mat-spinner>\\r\\n  </div> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"col-sm-10 font_x_large\\\">\\r\\n        {{ exchangeRateDate | date: \\\"d, MMM, yyyy\\\" }}\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <!-- <button mat-raised-button (click)=\\\"verifyExchangeRate()\\\" [disabled]=\\\"isVerified || verifyExchangeRateLoader || verified\\\">\\r\\n              <span class=\\\"pull-left spinner_center\\\" *ngIf=\\\"verifyExchangeRateLoader\\\"><mat-spinner [diameter]=\\\"15\\\"></mat-spinner></span>Verify</button> -->\\r\\n\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          [disabled]=\\\"isVerified || verifyExchangeRateLoader\\\"\\r\\n          (click)=\\\"verifyExchangeRate()\\\"\\r\\n          *ngIf=\\\"isEditingAllowed\\\"\\r\\n        >\\r\\n          <span\\r\\n            *ngIf=\\\"\\r\\n              !verifyExchangeRateLoader;\\r\\n              else exchangeRateVerificationLoaderTemplate\\r\\n            \\\"\\r\\n            >Verify</span\\r\\n          >\\r\\n          <ng-template #exchangeRateVerificationLoaderTemplate>\\r\\n            <div class=\\\"spinner_center padding_top_5 padding_bottom_5\\\">\\r\\n              <mat-spinner [diameter]=\\\"25\\\"> </mat-spinner>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr />\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm12\\\">\\r\\n      <p style=\\\"padding-left:30px; padding-right:30px; text-align:'left'\\\">\\r\\n        All of the below exchange rates were generated as a result of all the\\r\\n        currencies we maintain and the exchange rates provided at the creation\\r\\n        form. In certain cases, the machine calculations for the exchange rates\\r\\n        may not reflect real life exchange rates.<br />\\r\\n        Please <strong>check and verify</strong> that all the provided exchange\\r\\n        rates are correct for all currencies.<br /><br />\\r\\n        <b>Note:</b> Each office has unique set of exchange rates for each\\r\\n        currency.<br /><br />\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select\\r\\n            placeholder=\\\"Office\\\"\\r\\n            name=\\\"OfficeId\\\"\\r\\n            [(ngModel)]=\\\"selectedOffice\\\"\\r\\n            (selectionChange)=\\\"getExchangeRates()\\\"\\r\\n          >\\r\\n            <mat-option *ngFor=\\\"let item of officeList\\\" [value]=\\\"item.OfficeId\\\">\\r\\n              {{ item.OfficeName }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-5\\\" *ngIf=\\\"isEditingAllowed\\\">\\r\\n        <!-- <button mat-raised-button (click)=\\\"saveExchangeRatesForOffice(true)\\\"  [disabled]=\\\"isVerified\\\"></button> -->\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          [disabled]=\\\"isVerified || exchangeRateLoader\\\"\\r\\n          (click)=\\\"saveExchangeRatesForOffice(true)\\\"\\r\\n        >\\r\\n          <span\\r\\n            *ngIf=\\\"\\r\\n              !exchangeRateLoader;\\r\\n              else exchangeRateOfficeAddLoaderTemplate\\r\\n            \\\"\\r\\n            >Copy & Save for All Office</span\\r\\n          >\\r\\n          <ng-template #exchangeRateOfficeAddLoaderTemplate>\\r\\n            <div class=\\\"spinner_center padding_top_5 padding_bottom_5\\\">\\r\\n              <mat-spinner [diameter]=\\\"25\\\"> </mat-spinner>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isEditingAllowed\\\">\\r\\n        <!-- <button mat-raised-button   [disabled]=\\\"isVerified\\\">Save</button> -->\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          [disabled]=\\\"isVerified || exchangeRateLoader\\\"\\r\\n          (click)=\\\"saveExchangeRatesForOffice(false)\\\"\\r\\n        >\\r\\n          <span *ngIf=\\\"!exchangeRateLoader; else exchangeRateAddLoaderTemplate\\\"\\r\\n            >Save</span\\r\\n          >\\r\\n          <ng-template #exchangeRateAddLoaderTemplate>\\r\\n            <div class=\\\"spinner_center padding_top_5 padding_bottom_5\\\">\\r\\n              <mat-spinner [diameter]=\\\"25\\\"> </mat-spinner>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <table>\\r\\n        <tr>\\r\\n          <th>From Currency</th>\\r\\n          <th>To Currency</th>\\r\\n          <th>Rate</th>\\r\\n        </tr>\\r\\n\\r\\n        <tr *ngFor=\\\"let item of exchangeRateList\\\" class=\\\"text-center\\\">\\r\\n          <span\\r\\n            *ngIf=\\\"\\r\\n              item.FromCurrency == item.ToCurrency;\\r\\n              else exchangeRateTemplate\\r\\n            \\\"\\r\\n          ></span>\\r\\n          <ng-template #exchangeRateTemplate>\\r\\n            <td class=\\\"text-center\\\" text-align=\\\"left\\\">\\r\\n              {{ item.FromCurrency }}\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\" text-align=\\\"left\\\">\\r\\n              {{ item.ToCurrency }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center\\\"\\r\\n              text-align=\\\"left\\\"\\r\\n              *ngIf=\\\"!isVerified && isEditingAllowed\\\"\\r\\n            >\\r\\n              <mat-form-field>\\r\\n                <input\\r\\n                  type=\\\"number\\\"\\r\\n                  [(ngModel)]=\\\"item.Rate\\\"\\r\\n                  matInput\\r\\n                  placeholder=\\\"Rate\\\"\\r\\n                />\\r\\n              </mat-form-field>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center\\\"\\r\\n              text-align=\\\"left\\\"\\r\\n              *ngIf=\\\"isVerified || !isEditingAllowed\\\"\\r\\n            >\\r\\n              {{ item.Rate }}\\r\\n            </td>\\r\\n          </ng-template>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\nth, td {\\n  padding: 8px;\\n  text-align: left;\\n  border-bottom: 1px solid #ddd; }\\n\\ntr:hover {\\n  background-color: #f5f5f5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2FjY291bnRpbmcvZXhjaGFuZ2UtcmF0ZS9leGNoYW5nZS1yYXRlLWRldGFpbC9kOlxcRGF5IFVzZXJcXEF2aW5hc2hcXE9mZmljaWFsXFxIdW1hbml0YXJpYW5cXEdpdExhYlJlcG9cXGNsZWFyLWZ1c2lvblxcSHVtYW5pdGFyaWFuQXNzaXN0YW5jZS5XZWJBcGlcXE5ld1VJL3NyY1xcYXBwXFxkYXNoYm9hcmRcXGFjY291bnRpbmdcXGV4Y2hhbmdlLXJhdGVcXGV4Y2hhbmdlLXJhdGUtZGV0YWlsXFxleGNoYW5nZS1yYXRlLWRldGFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsNkJBQTZCLEVBQUE7O0FBRy9CO0VBQVUseUJBQXdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvYWNjb3VudGluZy9leGNoYW5nZS1yYXRlL2V4Y2hhbmdlLXJhdGUtZGV0YWlsL2V4Y2hhbmdlLXJhdGUtZGV0YWlsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG50aCwgdGQge1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG59XHJcblxyXG50cjpob3ZlciB7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1O31cclxuIl19 */\"","import { Component, OnInit, Input, OnChanges, EventEmitter, SimpleChanges, Output } from '@angular/core';\r\nimport { ICurrencyList } from '../../gain-loss-report/gain-loss-report.model';\r\nimport { ICurrencyListModel } from '../../vouchers/models/voucher.model';\r\nimport { IOfficeListModel, IOfficeExchangeRateModels } from 'src/app/dashboard/accounting/exchange-rate/models/exchange-rate.model';\r\nimport { ExchangeRateService } from '../exchange-rate-listing/exchange-rate.service';\r\nimport { IResponseData } from '../../vouchers/models/status-code.model';\r\nimport { CommonLoaderService } from '../../../../shared/common-loader/common-loader.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { VerifyExchangeRateComponent } from '../verify-exchange-rate/verify-exchange-rate.component';\r\n\r\n@Component({\r\n  selector: 'app-exchange-rate-detail',\r\n  templateUrl: './exchange-rate-detail.component.html',\r\n  styleUrls: ['./exchange-rate-detail.component.scss']\r\n})\r\nexport class ExchangeRateDetailComponent implements OnInit, OnChanges {\r\n\r\n@Input() currencyList: ICurrencyListModel[] = [];\r\n@Input() officeList: IOfficeListModel[] = [];\r\n@Input() isEditingAllowed: boolean;\r\n@Input() exchangeRateItem: any;\r\n@Output() listRefresh = new EventEmitter();\r\n\r\nexchangeRateVerify = false;\r\nexchangeRateLoader = false;\r\nisVerified = false;\r\nverifyExchangeRateLoader = false;\r\nexchangeRateDate: any;\r\n\r\nselectedOffice: number;\r\nexchangeRateList: any[];\r\n\r\n  constructor(private exchangeRateService: ExchangeRateService,\r\n              private toastr: ToastrService, public commonLoader: CommonLoaderService,\r\n              public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //#region \"ngOnChanges\"\r\n  ngOnChanges( changes: SimpleChanges) {\r\n    if (this.exchangeRateItem !== undefined) {\r\n      this.isVerified = this.exchangeRateItem.VerificationStatus;\r\n      // this.exchangeRateDate = this.selectedExchangeRateDate;\r\n\r\n      this.exchangeRateDate = this.exchangeRateItem.ExchangeRateDate;\r\n    }\r\n\r\n    this.getExchangeRates();\r\n  }\r\n  //#endregion\r\n\r\n  getExchangeRates() {\r\n    this.exchangeRateList = [];\r\n    if (\r\n      this.exchangeRateItem !== null &&\r\n      this.exchangeRateItem !== undefined\r\n    ) {\r\n      this.getExchangeRateDetailByDate(this.exchangeRateDate);\r\n    }\r\n  }\r\n\r\n  getExchangeRateDetailByDate(ExchangeRateDate: any) {\r\n    this.exchangeRateItem.ExchangeRateDate = this.exchangeRateService.getLocalDate(this.exchangeRateItem.ExchangeRateDate);\r\n    this.selectedOffice = this.selectedOffice === undefined ? this.officeList[0].OfficeId : this.selectedOffice;\r\n\r\n    this.exchangeRateService.GetExchangeRatesByDate(ExchangeRateDate, this.selectedOffice).subscribe(\r\n      (response: IResponseData) => {\r\n        if (response.statusCode === 200 && response.data !== null) {\r\n          this.exchangeRateList = [];\r\n\r\n          response.data.forEach(element => {\r\n            this.exchangeRateList.push({\r\n              FromCurrencyId: element.FromCurrency,\r\n              ToCurrencyId: element.ToCurrency,\r\n              FromCurrency: this.currencyList.filter(x => x.CurrencyId === element.FromCurrency)[0].CurrencyName,\r\n              ToCurrency: this.currencyList.filter(x => x.CurrencyId === element.ToCurrency)[0].CurrencyName,\r\n              Rate: element.Rate\r\n            });\r\n          });\r\n\r\n          this.isVerified = response.IsExchangeRateVerified;\r\n        }\r\n      },\r\n      error => {\r\n      }\r\n    );\r\n  }\r\n\r\n  saveExchangeRatesForOffice(saveForAllOffice) {\r\n    this.exchangeRateLoader = true;\r\n    const officeExchangeRateModels: IOfficeExchangeRateModels = {\r\n    OfficeId: 0,\r\n    GenerateExchangeRateModel: [],\r\n    SaveForAllOffices: false\r\n    };\r\n\r\n    if (this.exchangeRateList != null && this.exchangeRateList !== undefined) {\r\n       this.exchangeRateList.forEach(x =>\r\n        officeExchangeRateModels.GenerateExchangeRateModel.push({\r\n          FromCurrencyId: x.FromCurrencyId,\r\n          ToCurrencyId: x.ToCurrencyId,\r\n          Rate: x.Rate,\r\n          Date: this.exchangeRateService.getLocalDate(this.exchangeRateItem.ExchangeRateDate)\r\n        }));\r\n\r\n        officeExchangeRateModels.SaveForAllOffices = saveForAllOffice;\r\n        officeExchangeRateModels.OfficeId = this.selectedOffice;\r\n\r\n      this.exchangeRateService.SaveExchangeRatesForAllOffices(officeExchangeRateModels).subscribe(\r\n        (response: IResponseData) => {\r\n          if (response.statusCode === 200) {\r\n            this.exchangeRateLoader = false;\r\n            this.toastr.success('Exchange Rates Added successfully');\r\n          } else {\r\n            this.toastr.error(response.message);\r\n          }\r\n          this.exchangeRateLoader = false;\r\n        },\r\n        (error) => {\r\n          this.toastr.error('Someting went wrong');\r\n          this.exchangeRateLoader = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  verifyExchangeRate(): void {\r\n    const dialogRef = this.dialog.open(VerifyExchangeRateComponent, {\r\n      width: '400px',\r\n      data: {data: '' },\r\n      autoFocus: false\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.verifyExchangeRates();\r\n      }\r\n    });\r\n  }\r\n\r\n  verifyExchangeRates() {\r\n    this.verifyExchangeRateLoader = true;\r\n    this.exchangeRateItem.ExchangeRateDate = this.exchangeRateService.getLocalDate(this.exchangeRateItem.ExchangeRateDate);\r\n\r\n    this.exchangeRateService.VerifyExchangeRates(this.exchangeRateItem.ExchangeRateDate).subscribe(\r\n      (response: IResponseData) => {\r\n        if (response.statusCode === 200 && response.data !== null) {\r\n          this.exchangeRateListRefresh();\r\n          this.isVerified = true;\r\n          this.verifyExchangeRateLoader = false;\r\n          this.toastr.success(response.message);\r\n        } else {\r\n          this.verifyExchangeRateLoader = false;\r\n          this.toastr.error('Something went wrong!!');\r\n        }\r\n      },\r\n      error => {\r\n        this.verifyExchangeRateLoader = false;\r\n        this.toastr.error('Something went wrong!!');\r\n      }\r\n    );\r\n  }\r\n\r\n  //#region \"onListRefresh\"\r\n  exchangeRateListRefresh() {\r\n    this.listRefresh.emit(this.exchangeRateItem.ExchangeRateVerificationId);\r\n  }\r\n  //#endregion\r\n\r\n}\r\n","module.exports = \"<div class=\\\"exchange-rate-listing-main\\\">\\r\\n  <div class=\\\"body-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div [class]=\\\"colsm6\\\">\\r\\n          <div #exchangeRateListing>\\r\\n            <mat-card [ngStyle]=\\\"scrollStyles\\\">\\r\\n              <div>\\r\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openAddExchangeRateDialog()\\\" *ngIf=\\\"isEditingAllowed\\\">\\r\\n                  Add\\r\\n                </button>\\r\\n                <hr />\\r\\n                <div class=\\\"row text-center\\\">\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput [matDatepicker]=\\\"fromDateFilterPicker\\\"\\r\\n                        [(ngModel)]=\\\"exchangeRateFilter.FromDateFilter\\\" placeholder=\\\"From Date\\\" />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"fromDateFilterPicker\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker #fromDateFilterPicker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput [min]=\\\"exchangeRateFilter.FromDateFilter\\\" [matDatepicker]=\\\"tillDateFilterPicker\\\"\\r\\n                        [(ngModel)]=\\\"exchangeRateFilter.TillDateFilter\\\" placeholder=\\\"Till Date\\\" />\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"tillDateFilterPicker\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker #tillDateFilterPicker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row text-center\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <mat-checkbox [(ngModel)]=\\\"exchangeRateFilter.VerifiedFilter\\\">Verified</mat-checkbox>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <button mat-raised-button color=\\\"accent\\\" class=\\\"margin_left_10\\\"\\r\\n                          (click)=\\\"getSavedExchangeRatesDate()\\\">\\r\\n                          Apply\\r\\n                        </button>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <!-- Reset -->\\r\\n                        <button mat-raised-button (click)=\\\"onFilterReset()\\\">\\r\\n                          Clear\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    {{ exchangeRateFilter.totalCount }} Records\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12\\\"></div>\\r\\n                </div>\\r\\n                <br />\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div *ngIf=\\\"\\r\\n                      exchangeRateListLoaderFlag;\\r\\n                      else exchangeRateListTemplate\\r\\n                    \\\" class=\\\"col-sm-12\\\">\\r\\n                    <mat-spinner class=\\\"center_loader\\\" diameter=\\\"50\\\"></mat-spinner>\\r\\n                  </div>\\r\\n                  <ng-template #exchangeRateListTemplate>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                      <div class=\\\"responsive_table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered\\\">\\r\\n                          <tbody>\\r\\n                            <tr>\\r\\n                              <td width=\\\"2%\\\">\\r\\n                                <p class=\\\"width_8\\\"></p>\\r\\n                              </td>\\r\\n                              <td width=\\\"46%\\\" class=\\\"text-left\\\">\\r\\n                                <strong>Date</strong>\\r\\n                              </td>\\r\\n                              <td width=\\\"46%\\\" text-align=\\\"left\\\">\\r\\n                                <strong>Verification</strong>\\r\\n                              </td>\\r\\n                              <td width=\\\"4%\\\"></td>\\r\\n                            </tr>\\r\\n                            <tr *ngFor=\\\"let item of exchangeRateList\\\" (click)=\\\"\\r\\n                                onItemClick(\\r\\n                                  item\\r\\n                                )\\r\\n                              \\\" [ngClass]=\\\"{\\r\\n                                selected: exchangeRateVerificationId == item.ExchangeRateVerificationId\\r\\n                              }\\\">\\r\\n                              <td width=\\\"2%\\\">\\r\\n                                <p class=\\\"width_8\\\"></p>\\r\\n                              </td>\\r\\n                              <td width=\\\"46%\\\" text-align=\\\"left\\\">\\r\\n                                <p class=\\\"diamond\\\">\\r\\n                                  {{\\r\\n                                    item.ExchangeRateDate | date: \\\"dd/MM/yyyy\\\"\\r\\n                                  }}\\r\\n                                </p>\\r\\n                              </td>\\r\\n                              <td width=\\\"46%\\\" text-align=\\\"left\\\">\\r\\n                                <p class=\\\"text_overflow\\\">\\r\\n                                  {{\\r\\n                                    item.VerificationStatus\\r\\n                                      ? \\\"Verified\\\"\\r\\n                                      : \\\"Pending\\\"\\r\\n                                  }}\\r\\n                                </p>\\r\\n                              </td>\\r\\n                              <td class=\\\"text-center\\\" width=\\\"4%\\\" *ngIf=\\\"isEditingAllowed\\\">\\r\\n                                <button mat-icon-button [disabled]=\\\"item.VerificationStatus\\\"\\r\\n                                  (click)=\\\"onDeleteExchangeRate(item.ExchangeRateDate)\\\" color=\\\"warn\\\"\\r\\n                                  aria-label=\\\"Example icon-button with a heart icon\\\">\\r\\n                                  <mat-icon>\\r\\n                                    delete\\r\\n                                  </mat-icon>\\r\\n\\r\\n                                </button>\\r\\n                              </td>\\r\\n                              <td class=\\\"text-center\\\" width=\\\"4%\\\">\\r\\n                                <i *ngIf=\\\"exchangeRateVerificationId == item.ExchangeRateVerificationId\\\"\\r\\n                                  class=\\\"material-icons font-12\\\">\\r\\n                                  arrow_forward_ios\\r\\n                                </i>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                      <mat-paginator [length]=\\\"exchangeRateFilter.totalCount\\\" [pageSize]=\\\"exchangeRateFilter.pageSize\\\"\\r\\n                        [pageIndex]=\\\"exchangeRateFilter.pageIndex\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\r\\n                        (page)=\\\"pageEvent($event)\\\">\\r\\n                      </mat-paginator>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Exchange Rate Detail -->\\r\\n        <div class=\\\"col-sm-6\\\" [hidden]=\\\"!showExchangeRateDetail\\\">\\r\\n          <mat-card [ngStyle]=\\\"scrollStyles\\\">\\r\\n            <app-exchange-rate-detail [currencyList]=\\\"CurrencyList\\\" [officeList]=\\\"officeList\\\"\\r\\n              [exchangeRateItem]=\\\"exchangeRateItem\\\" (listRefresh)=\\\"listRefresh($event)\\\"\\r\\n              [isEditingAllowed]=\\\"isEditingAllowed\\\"></app-exchange-rate-detail>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2V4Y2hhbmdlLXJhdGUvZXhjaGFuZ2UtcmF0ZS1saXN0aW5nL2V4Y2hhbmdlLXJhdGUtbGlzdGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { ExchangeRateService } from './exchange-rate.service';\r\nimport { IExchangeRateFilterModel, IExchangeRateModel, ICurrencyListModel, IOfficeListModel } from '../models/exchange-rate.model';\r\nimport { ExchangeRateAddComponent } from '../exchange-rate-add/exchange-rate-add.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../../../shared/services/localstorage.service';\r\nimport { ApplicationPages } from '../../../../shared/applicationpagesenum';\r\n\r\n@Component({\r\n  selector: 'app-exchange-rate-listing',\r\n  templateUrl: './exchange-rate-listing.component.html',\r\n  styleUrls: ['./exchange-rate-listing.component.scss']\r\n})\r\nexport class ExchangeRateListingComponent implements OnInit {\r\n\r\n  colsm6 = 'col-sm-10 col-sm-offset-1';\r\n  exchangeRateFilter: IExchangeRateFilterModel;\r\n  exchangeRateListLoaderFlag = false;\r\n  exchangeRateList: any[] = [];\r\n  CurrencyList: ICurrencyListModel[] = [];\r\n  selectedExchangeRateDate: any;\r\n  showExchangeRateDetail: boolean;\r\n  officeList: IOfficeListModel[] = [];\r\n  isVerified: boolean;\r\n  exchangeRateVerificationId: number;\r\n  exchangeRateItem: any;\r\n  isDeleted = false;\r\n  isEditingAllowed = false;\r\n  pageId = ApplicationPages.ExchangeRates;\r\n\r\n // screen\r\n screenHeight: any;\r\n screenWidth: any;\r\n scrollStyles: any;\r\n\r\n  constructor(private exchangeRateService: ExchangeRateService,   public dialog: MatDialog, private toastr: ToastrService,\r\n    private localStorageService: LocalStorageService) {\r\n    this.getScreenSize();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initExchangeRateFilter();\r\n    this.getCurrencyList();\r\n    this.getOfficeList();\r\n    this.getSavedExchangeRatesDate();\r\n    this.isEditingAllowed = this.localStorageService.IsEditingAllowed(\r\n      this.pageId\r\n    );\r\n  }\r\n\r\n  //#region \"initVoucherFilter\"\r\n  initExchangeRateFilter() {\r\n    this.exchangeRateFilter = {\r\n      TillDateFilter: null,\r\n      FromDateFilter: null,\r\n      VerifiedFilter: null,\r\n      totalCount: null,\r\n      pageIndex: null,\r\n      pageSize: 10\r\n    };\r\n\r\n    this.exchangeRateList = [];\r\n  }\r\n  //#endregion\r\n\r\n   //#region \"Dynamic Scroll\"\r\n   @HostListener('window:resize', ['$event'])\r\n   getScreenSize(event?) {\r\n     this.screenHeight = window.innerHeight;\r\n     this.screenWidth = window.innerWidth;\r\n\r\n     this.scrollStyles = {\r\n       'overflow-y': 'auto',\r\n       height: this.screenHeight - 110 + 'px',\r\n       'overflow-x': 'hidden'\r\n     };\r\n   }\r\n   //#endregion\r\n\r\n  //#region \"Add Voucher Popup\"\r\n  openAddExchangeRateDialog(): void {\r\n    // NOTE: It passed the data into the Add Voucher Model\r\n\r\n    const dialogRef = this.dialog.open(ExchangeRateAddComponent, {\r\n      width: '550px',\r\n      data: {\r\n        data: 'AddExchangeRate',\r\n        currencyList: this.CurrencyList,\r\n      },\r\n      autoFocus: false\r\n    });\r\n\r\n    dialogRef.componentInstance.onListRefresh.subscribe(() => {\r\n      this.getSavedExchangeRatesDate();\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"getCurrencyList\"\r\n  getCurrencyList() {\r\n    this.exchangeRateService.GetCurrencyList().subscribe(\r\n      (response: any) => {\r\n        this.CurrencyList = [];\r\n        if (response.statusCode === 200 && response.data !== null) {\r\n          response.data.forEach(element => {\r\n            this.CurrencyList.push({\r\n              CurrencyId: element.CurrencyId,\r\n              CurrencyName: element.CurrencyName\r\n            });\r\n          });\r\n        }\r\n      },\r\n      error => {}\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n   //#region \"onItemClick\"\r\n   onItemClick(item: any) {\r\n    this.exchangeRateItem = item;\r\n    this.exchangeRateVerificationId = item.ExchangeRateVerificationId;\r\n    this.showExchangeRateDetailPanel();\r\n  }\r\n\r\n  //#region \"show/ hide\"\r\n  showExchangeRateDetailPanel() {\r\n    this.showExchangeRateDetail = true;\r\n    this.colsm6 = this.showExchangeRateDetail\r\n      ? 'col-sm-6'\r\n      : 'col-sm-10 col-sm-offset-1';\r\n  }\r\n\r\n  //#region \"getOfficeList\"\r\n  getOfficeList() {\r\n    this.exchangeRateService.GetOfficeList().subscribe(\r\n      (response: any) => {\r\n        this.officeList = [];\r\n        if (response.statusCode === 200 && response.data !== null) {\r\n          response.data.forEach(element => {\r\n            this.officeList.push({\r\n              OfficeId: element.OfficeId,\r\n              OfficeName: element.OfficeName\r\n            });\r\n          });\r\n        }\r\n      },\r\n      error => {}\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"getExchangeRatesVerificationList\"\r\n  getSavedExchangeRatesDate() {\r\n    this.exchangeRateListLoaderFlag = true;\r\n    this.exchangeRateList = [];\r\n\r\n    const filter = {\r\n      FromDate: this.exchangeRateFilter.FromDateFilter !== null ?\r\n      this.exchangeRateService.getLocalDate(this.exchangeRateFilter.FromDateFilter) :\r\n      this.exchangeRateFilter.FromDateFilter,\r\n      ToDate: this.exchangeRateFilter.TillDateFilter !== null ?\r\n      this.exchangeRateService.getLocalDate(this.exchangeRateFilter.TillDateFilter) : this.exchangeRateFilter.TillDateFilter ,\r\n      IsVerified: this.exchangeRateFilter.VerifiedFilter,\r\n      TotalCount: this.exchangeRateFilter.totalCount,\r\n      PageSize: this.exchangeRateFilter.pageSize,\r\n      PageIndex: this.exchangeRateFilter.pageIndex\r\n    };\r\n    this.exchangeRateService.GetSavedExchangeRates(filter).subscribe(\r\n      (response: any) => {\r\n        if (response.statusCode === 200 && response.data !== undefined && response.data !== null) {\r\n          this.exchangeRateListLoaderFlag = false;\r\n          response.data.forEach(element => {\r\n            this.exchangeRateList.push({\r\n              ExchangeRateVerificationId: element.ExRateVerificationId,\r\n              ExchangeRateDate: element.Date,\r\n              VerificationStatus: element.IsVerified\r\n            });\r\n          });\r\n\r\n          if (this.exchangeRateList.length > 0) {\r\n            this.selectedExchangeRateDate = this.exchangeRateList[0].ExchangeRateDate;\r\n          }\r\n\r\n          this.isDeleted = false;\r\n          this.exchangeRateFilter.totalCount = response.total;\r\n\r\n        } else {\r\n          this.exchangeRateListLoaderFlag = false;\r\n        }\r\n      },\r\n      error => {\r\n        this.exchangeRateListLoaderFlag = false;\r\n      }\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n   //#region \"onFilterReset\"\r\n  onFilterReset() {\r\n    this.exchangeRateFilter = {\r\n      TillDateFilter: null,\r\n      FromDateFilter: null,\r\n      VerifiedFilter: null,\r\n      totalCount: null,\r\n      pageIndex: null,\r\n      pageSize: 10\r\n    };\r\n\r\n    this.getSavedExchangeRatesDate();\r\n  }\r\n\r\n  onDeleteExchangeRate(exchangeRateDate: any) {\r\n    this.exchangeRateListLoaderFlag = true;\r\n    this.isDeleted = true;\r\n    exchangeRateDate = this.exchangeRateService.getLocalDate(exchangeRateDate);\r\n    this.exchangeRateService.DeleteExchangeRates(exchangeRateDate).subscribe(\r\n      response => {\r\n        if (\r\n          response.statusCode === 200\r\n        ) {\r\n          this.exchangeRateListLoaderFlag = false;\r\n          this.toastr.success(response.message);\r\n          this.getSavedExchangeRatesDate();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n          this.exchangeRateListLoaderFlag = false;\r\n        }\r\n      },\r\n      error => {\r\n        this.toastr.error('Something went wrong!!!');\r\n        this.exchangeRateListLoaderFlag = false;\r\n      });\r\n    }\r\n\r\n    listRefresh(event: any) {\r\n      this.getSavedExchangeRatesDate();\r\n    }\r\n\r\n    //#region \"pageEvent\"\r\n  pageEvent(e) {\r\n    this.exchangeRateFilter.pageIndex = e.pageIndex;\r\n    this.exchangeRateFilter.pageSize = e.pageSize;\r\n    this.getSavedExchangeRatesDate();\r\n  }\r\n  //#endregion\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { GlobalService } from '../../../../shared/services/global-services.service';\r\nimport { AppUrlService } from '../../../../shared/services/app-url.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { IResponseData } from '../../vouchers/models/status-code.model';\r\nimport { IExchangeRateFilterModel, IExchangeRateAddModel, IOfficeExchangeRateModels } from '../models/exchange-rate.model';\r\n\r\n@Injectable()\r\nexport class ExchangeRateService {\r\n  //#endregion\r\n  constructor(\r\n    private globalService: GlobalService,\r\n    private appurl: AppUrlService\r\n  ) {}\r\n\r\n//#region \"GetExchangeRateList\"\r\n    GetExchangeRateList(data: IExchangeRateFilterModel) {\r\n    return this.globalService.post(\r\n      this.appurl.getApiUrl() + GLOBAL.API_VoucherTransaction_GetAllVoucherList,\r\n      data\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"Add Exchange Rate\"\r\n  AddExchangeRate(data: any[]) {\r\n    return this.globalService\r\n      .post(\r\n        this.appurl.getApiUrl() + GLOBAL.API_ExchangeRates_SaveSystemGeneratedExchangeRates,\r\n        data\r\n      )\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"Add Exchange Rate\"\r\n  SaveExchangeRatesForAllOffices(data: IOfficeExchangeRateModels) {\r\n    return this.globalService\r\n      .post(\r\n        this.appurl.getApiUrl() + GLOBAL.API_ExchangeRates_SaveExchangeRatesForAllOffices,\r\n        data\r\n      )\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"GetCurrencyList\"\r\n  GetCurrencyList(): any {\r\n    return this.globalService\r\n      .getList(this.appurl.getApiUrl() + GLOBAL.API_code_GetAllCurrency)\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x.data.CurrencyList,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"GetOfficeList\"\r\n  GetOfficeList(): any {\r\n    return this.globalService\r\n      .getList(this.appurl.getApiUrl() + GLOBAL.API_code_GetAllOffice)\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x.data.OfficeDetailsList,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"GetSavedExchangeRates\"\r\n  GetSavedExchangeRates( data: any): any {\r\n    return this.globalService\r\n    .post(\r\n      this.appurl.getApiUrl() + GLOBAL.API_ExchangeRates_GetSavedExchangeRates,\r\n      data\r\n    ).pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x.data.ExchangeRateVerificationList,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message,\r\n            total: x.data.TotalExchangeRateCount\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"Get Saved ExchangeRates\"\r\n  GetExchangeRatesByDate(date: any, officeId: number) {\r\n\r\n    const data = {\r\n      ExchangeRateDate: this.getLocalDate(date),\r\n      OfficeId: officeId\r\n    };\r\n\r\n    return this.globalService\r\n      .post(\r\n        this.appurl.getApiUrl() + GLOBAL.API_ExchangeRates_GetExchangeRatesDetail,\r\n        data\r\n      )\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: x.data.ExchangeRateDetailViewModelList,\r\n            statusCode: x.StatusCode,\r\n            message: x.Message,\r\n            IsExchangeRateVerified: x.data.IsExchangeRateVerified\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"Verify ExchangeRates\"\r\n  VerifyExchangeRates(ExchangeRateDate: any) {\r\n\r\n    return this.globalService\r\n      .post(\r\n        this.appurl.getApiUrl() + GLOBAL.API_ExchangeRates_VerifyExchangeRates,\r\n        ExchangeRateDate\r\n      )\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: '',\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"Delete ExchangeRates\"\r\n  DeleteExchangeRates(ExchangeRateDate: any) {\r\n    return this.globalService\r\n      .post(\r\n        this.appurl.getApiUrl() + GLOBAL.API_ExchangeRates_DeleteExchangeRates,\r\n        ExchangeRateDate\r\n      )\r\n      .pipe(\r\n        map(x => {\r\n          const responseData: IResponseData = {\r\n            data: '',\r\n            statusCode: x.StatusCode,\r\n            message: x.Message\r\n          };\r\n          return responseData;\r\n        })\r\n      );\r\n  }\r\n  //#endregion\r\n\r\n  //#region \"getLocalDate\"\r\n  getLocalDate(date: any) {\r\n    return new Date(\r\n      new Date(date).getFullYear(),\r\n      new Date(date).getMonth(),\r\n      new Date(date).getDate(),\r\n      new Date().getHours(),\r\n      new Date().getMinutes(),\r\n      new Date().getSeconds(),\r\n      new Date().getMilliseconds(),\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExchangeRateListingComponent } from './exchange-rate-listing/exchange-rate-listing.component';\r\nimport { ExchangeRateComponent } from './exchange-rate.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ExchangeRateComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ExchangeRateListingComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ExchangeRateRoutingModule {}\r\n","module.exports = \"<div class=\\\"main_body\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2V4Y2hhbmdlLXJhdGUvZXhjaGFuZ2UtcmF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalSharedService } from 'src/app/shared/services/global-shared.service';\r\n\r\n@Component({\r\n  selector: 'app-exchange-rate',\r\n  templateUrl: './exchange-rate.component.html',\r\n  styleUrls: ['./exchange-rate.component.scss']\r\n})\r\nexport class ExchangeRateComponent implements OnInit {\r\n\r\n  setProjectHeader = 'Exchange Rates';\r\n\r\n  constructor(private globalService: GlobalSharedService) {\r\n    // Set Menu Header Name\r\n    this.globalService.setMenuHeaderName(this.setProjectHeader);\r\n\r\n    // Set Menu Header List\r\n    this.globalService.setMenuList([]);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ExchangeRateRoutingModule } from './exchange-rate-routing.module';\r\nimport { ExchangeRateComponent } from './exchange-rate.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { ExchangeRateListingComponent } from './exchange-rate-listing/exchange-rate-listing.component';\r\nimport { ExchangeRateAddComponent } from './exchange-rate-add/exchange-rate-add.component';\r\nimport { ExchangeRateDetailComponent } from './exchange-rate-detail/exchange-rate-detail.component';\r\nimport { VerifyExchangeRateComponent } from './verify-exchange-rate/verify-exchange-rate.component';\r\nimport { ExchangeRateService } from './exchange-rate-listing/exchange-rate.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExchangeRateComponent,\r\n    ExchangeRateListingComponent,\r\n    ExchangeRateAddComponent,\r\n    ExchangeRateDetailComponent,\r\n    VerifyExchangeRateComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ExchangeRateRoutingModule,\r\n\r\n    // material\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatStepperModule,\r\n  ],\r\n  providers: [\r\n    ExchangeRateService,\r\n  ],\r\n  exports: [],\r\n  entryComponents: [\r\n    ExchangeRateAddComponent,\r\n    VerifyExchangeRateComponent,\r\n  ]\r\n})\r\nexport class ExchangeRateModule { }\r\n","module.exports = \"<div class=\\\"row\\\" >\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"row text-center\\\" >\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <h3>Are You Sure?</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <p>\\r\\n          This verification will lock in all exchange rates for all currencies\\r\\n          on this date. This applies to all offices.\\r\\n        </p>\\r\\n        <br />\\r\\n        <p class=\\\"text-center\\\"><strong>This action is not reversible!</strong></p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row text-right\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"onCloseVerifyDialog(false)\\\">\\r\\n          <strong>I'm Not Sure!</strong>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <button\\r\\n          mat-raised-button\\r\\n          (click)=\\\"onCloseVerifyDialog(true)\\\"\\r\\n          color=\\\"accent\\\"\\r\\n        >\\r\\n          Verify\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hY2NvdW50aW5nL2V4Y2hhbmdlLXJhdGUvdmVyaWZ5LWV4Y2hhbmdlLXJhdGUvdmVyaWZ5LWV4Y2hhbmdlLXJhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CommonLoaderService } from '../../../../shared/common-loader/common-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-verify-exchange-rate',\r\n  templateUrl: './verify-exchange-rate.component.html',\r\n  styleUrls: ['./verify-exchange-rate.component.scss']\r\n})\r\nexport class VerifyExchangeRateComponent implements OnInit {\r\n\r\n\r\n  constructor( public dialogRef: MatDialogRef<VerifyExchangeRateComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public commonLoader: CommonLoaderService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCloseVerifyDialog(verified: boolean) {\r\n    this.dialogRef.close(verified);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}