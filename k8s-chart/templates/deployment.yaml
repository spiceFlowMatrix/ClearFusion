apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.gitlab.com/app: {{.Values.ci.project.path}}
    app.gitlab.com/env: {{.Values.ci.project.environment}}
  name: {{ .Values.web.name }}
  namespace: {{.Values.deployment.namespace}}
  labels:
    app: {{ .Values.web.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{.Values.web.name}}
  template:
    metadata:
      labels:
        app: {{.Values.web.name}}
    spec:
      imagePullSecrets:
        - name: gitlab-registry
      containers:
        - name: {{ .Values.web.name }}
          image: {{ .Values.web.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secrets/gcp/credentials.json
          - name: LINUX_DBCONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: {{ .Values.web.name }}-secrets
                key: appdbconnectionstring
          - name: POSTGRES_DB_HOST
            value: 127.0.0.1:5432
          - name: POSTGRES_DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.web.name }}-secrets
                key: postgresuser
          - name: POSTGRES_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.web.name }}-secrets
                key: postgrespassword
          - name: DEFAULT_CORS_POLICY_NAME
            value: localhost
          - name: DEFAULT_CORS_POLICY_URL
            value: https://legacyapptestedg.cha-net.org
          - name: WEB_SITE_URL
            value: http://localhost:4000/
          - name: GOOGLE_BUCKET_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.web.name }}-secrets
                key: googlebucketname
          - name: DOCS_URL
            value: {{ .Values.app.docsurl }}
          - name: ASPNETCORE_ENVIRONMENT
            value: {{ .Values.app.env }}
          volumeMounts:
            - name: application-gcp-serviceaccount
              mountPath: /secrets
              readOnly: true
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          imagePullPolicy: IfNotPresent
          command: ["/cloud_sql_proxy",
                    "-instances=clear-fusion-193608:europe-west4:cf-prod-primary=tcp:5432",
                    "-credential_file=/secrets/gcp/credentials.json"]
          volumeMounts:
            - name: application-gcp-serviceaccount
              mountPath: /secrets
              readOnly: true
      volumes:
      - name: application-gcp-serviceaccount
        secret:
          secretName: {{ .Values.web.name }}-secrets
          items:
          - key: appserviceaccount
            path: gcp/credentials.json